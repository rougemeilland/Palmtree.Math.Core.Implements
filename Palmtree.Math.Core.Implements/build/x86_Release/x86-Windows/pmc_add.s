	.file	"pmc_add.c"
	.text
	.p2align 4,,15
	.def	_DoCarry;	.scl	3;	.type	32;	.endef
_DoCarry:
LFB5465:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movl	%edx, %esi
	movl	%eax, %edx
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	movl	20(%esp), %ebp
	testl	%ecx, %ecx
	je	L9
	movl	%ecx, %ebx
	movl	%ebp, %edi
	testb	%al, %al
	jne	L3
	jmp	L8
	.p2align 4,,10
L23:
	movl	%edi, %ebp
	testb	%dl, %dl
	je	L8
L3:
	addl	$4, %esi
	movl	-4(%esi), %eax
	addb	$-1, %dl
	movl	$0, %edx
	leal	4(%ebp), %edi
	adcl	%edx, %eax
	movl	%eax, 0(%ebp)
	movl	24(%esp), %eax
	setc	%dl
	subl	$1, %ebx
	addl	%ebx, %eax
	subl	%ecx, %eax
	testl	%ebx, %ebx
	jne	L23
L2:
	testb	%dl, %dl
	je	L5
	testl	%eax, %eax
	je	L11
	movl	$1, (%edi)
	xorl	%eax, %eax
	popl	%ebx
	.cfi_remember_state
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,10
L8:
	.cfi_restore_state
	movsl
	subl	$1, %ebx
	jne	L8
L5:
	xorl	%eax, %eax
L1:
	popl	%ebx
	.cfi_remember_state
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
L9:
	.cfi_restore_state
	movl	24(%esp), %eax
	movl	%ebp, %edi
	jmp	L2
L11:
	movl	$-4, %eax
	jmp	L1
	.cfi_endproc
LFE5465:
	.p2align 4,,15
	.def	_Add_X_X_using_ADC;	.scl	3;	.type	32;	.endef
_Add_X_X_using_ADC:
LFB5468:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$56, %esp
	.cfi_def_cfa_offset 76
	movl	76(%esp), %eax
	movl	80(%esp), %ecx
	movl	84(%esp), %edx
	movl	(%eax), %esi
	movl	(%ecx), %ebx
	movl	%esi, 36(%esp)
	movl	%ebx, 40(%esp)
	cmpl	%ebx, %esi
	jb	L29
	movl	%esi, 40(%esp)
	movl	%ebx, 36(%esp)
	movl	%ecx, %ebx
	movl	%eax, %ecx
	movl	%ebx, %eax
L29:
	movl	20(%eax), %edi
	movl	36(%esp), %eax
	movl	(%edx), %ebx
	movl	20(%ecx), %ecx
	movl	20(%edx), %esi
	shrl	$3, %eax
	movl	%ebx, 44(%esp)
	movl	%ecx, 32(%esp)
	movl	%esi, 28(%esp)
	movl	%eax, 48(%esp)
	je	L34
	movl	%edi, 52(%esp)
	movl	%edi, %ebx
	movl	%ecx, %edx
	movl	%eax, 24(%esp)
	xorl	%eax, %eax
	.p2align 4,,10
L31:
/APP
 # 56 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcl	(%ebx), %ecx
	movl	%ecx, %ebp
	movl	4(%edx), %ecx
	adcl	4(%ebx), %ecx
	movl	%ecx, %edi
	movl	8(%edx), %ecx
	adcl	8(%ebx), %ecx
	movl	%ecx, (%esp)
	movl	12(%edx), %ecx
	adcl	12(%ebx), %ecx
	movl	%ecx, 4(%esp)
	movl	16(%edx), %ecx
	adcl	16(%ebx), %ecx
	movl	%ecx, 8(%esp)
	movl	20(%edx), %ecx
	adcl	20(%ebx), %ecx
	movl	%ecx, 12(%esp)
	movl	24(%edx), %ecx
	adcl	24(%ebx), %ecx
	movl	%ecx, 16(%esp)
	movl	28(%edx), %ecx
	adcl	28(%ebx), %ecx
	movl	%ecx, 20(%esp)
	setc	%al
 # 0 "" 2
/NO_APP
	movl	%edi, 4(%esi)
	movl	4(%esp), %edi
	addl	$32, %edx
	addl	$32, %ebx
	movl	(%esp), %ecx
	movl	%ebp, (%esi)
	addl	$32, %esi
	movl	%edi, -20(%esi)
	movl	8(%esp), %edi
	movl	%ecx, -24(%esi)
	movl	16(%esp), %ecx
	movl	%edi, -16(%esi)
	movl	12(%esp), %edi
	movl	%ecx, -8(%esi)
	movl	%edi, -12(%esi)
	movl	20(%esp), %edi
	movl	%edi, -4(%esi)
	subl	$1, 24(%esp)
	jne	L31
	movl	48(%esp), %ebx
	movl	52(%esp), %edi
	movl	36(%esp), %esi
	movl	%ebx, %edx
	sall	$3, %ebx
	sall	$5, %edx
	addl	%edx, 32(%esp)
	subl	%ebx, %esi
	addl	%edx, 28(%esp)
	addl	%edx, %edi
L30:
	testl	%esi, %esi
	je	L32
	movl	28(%esp), %ecx
	movl	32(%esp), %edx
	movl	%esi, %ebx
	.p2align 4,,10
L33:
	addl	$4, %edi
	addl	$4, %edx
	addb	$-1, %al
	movl	-4(%edx), %eax
	adcl	-4(%edi), %eax
	movl	%eax, (%ecx)
	setc	%al
	addl	$4, %ecx
	subl	$1, %ebx
	jne	L33
	sall	$2, %esi
	addl	%esi, 28(%esp)
	addl	%esi, 32(%esp)
L32:
	movl	36(%esp), %ebx
	movl	44(%esp), %edx
	movsbl	%al, %eax
	movl	40(%esp), %ecx
	subl	%ebx, %edx
	movl	%edx, 80(%esp)
	movl	28(%esp), %edx
	subl	%ebx, %ecx
	movl	%edx, 76(%esp)
	movl	32(%esp), %edx
	addl	$56, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	jmp	_DoCarry
	.p2align 4,,10
L34:
	.cfi_restore_state
	movl	36(%esp), %esi
	xorl	%eax, %eax
	jmp	L30
	.cfi_endproc
LFE5468:
	.p2align 4,,15
	.def	_Add_X_X_using_ADCX;	.scl	3;	.type	32;	.endef
_Add_X_X_using_ADCX:
LFB5469:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$56, %esp
	.cfi_def_cfa_offset 76
	movl	76(%esp), %eax
	movl	80(%esp), %ecx
	movl	84(%esp), %edx
	movl	(%eax), %esi
	movl	(%ecx), %ebx
	movl	%esi, 36(%esp)
	movl	%ebx, 40(%esp)
	cmpl	%ebx, %esi
	jb	L42
	movl	%esi, 40(%esp)
	movl	%ebx, 36(%esp)
	movl	%ecx, %ebx
	movl	%eax, %ecx
	movl	%ebx, %eax
L42:
	movl	20(%eax), %edi
	movl	36(%esp), %eax
	movl	(%edx), %ebx
	movl	20(%ecx), %ecx
	movl	20(%edx), %esi
	shrl	$3, %eax
	movl	%ebx, 44(%esp)
	movl	%ecx, 32(%esp)
	movl	%esi, 28(%esp)
	movl	%eax, 48(%esp)
	je	L47
	movl	%edi, 52(%esp)
	movl	%edi, %ebx
	movl	%ecx, %edx
	movl	%eax, 24(%esp)
	xorl	%eax, %eax
	.p2align 4,,10
L44:
/APP
 # 141 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcxl	(%ebx), %ecx
	movl	%ecx, %ebp
	movl	4(%edx), %ecx
	adcxl	4(%ebx), %ecx
	movl	%ecx, %edi
	movl	8(%edx), %ecx
	adcxl	8(%ebx), %ecx
	movl	%ecx, (%esp)
	movl	12(%edx), %ecx
	adcxl	12(%ebx), %ecx
	movl	%ecx, 4(%esp)
	movl	16(%edx), %ecx
	adcxl	16(%ebx), %ecx
	movl	%ecx, 8(%esp)
	movl	20(%edx), %ecx
	adcxl	20(%ebx), %ecx
	movl	%ecx, 12(%esp)
	movl	24(%edx), %ecx
	adcxl	24(%ebx), %ecx
	movl	%ecx, 16(%esp)
	movl	28(%edx), %ecx
	adcxl	28(%ebx), %ecx
	movl	%ecx, 20(%esp)
	setc	%al
 # 0 "" 2
/NO_APP
	movl	%edi, 4(%esi)
	movl	4(%esp), %edi
	addl	$32, %edx
	addl	$32, %ebx
	movl	(%esp), %ecx
	movl	%ebp, (%esi)
	addl	$32, %esi
	movl	%edi, -20(%esi)
	movl	8(%esp), %edi
	movl	%ecx, -24(%esi)
	movl	16(%esp), %ecx
	movl	%edi, -16(%esi)
	movl	12(%esp), %edi
	movl	%ecx, -8(%esi)
	movl	%edi, -12(%esi)
	movl	20(%esp), %edi
	movl	%edi, -4(%esi)
	subl	$1, 24(%esp)
	jne	L44
	movl	48(%esp), %ebx
	movl	52(%esp), %edi
	movl	36(%esp), %esi
	movl	%ebx, %edx
	sall	$3, %ebx
	sall	$5, %edx
	addl	%edx, 32(%esp)
	subl	%ebx, %esi
	addl	%edx, 28(%esp)
	addl	%edx, %edi
L43:
	testl	%esi, %esi
	je	L45
	movl	28(%esp), %ecx
	movl	32(%esp), %edx
	movl	%esi, %ebx
	.p2align 4,,10
L46:
	addl	$4, %edi
	addl	$4, %edx
	addb	$-1, %al
	movl	-4(%edx), %eax
	adcl	-4(%edi), %eax
	movl	%eax, (%ecx)
	setc	%al
	addl	$4, %ecx
	subl	$1, %ebx
	jne	L46
	sall	$2, %esi
	addl	%esi, 28(%esp)
	addl	%esi, 32(%esp)
L45:
	movl	36(%esp), %ebx
	movl	44(%esp), %edx
	movsbl	%al, %eax
	movl	40(%esp), %ecx
	subl	%ebx, %edx
	movl	%edx, 80(%esp)
	movl	28(%esp), %edx
	subl	%ebx, %ecx
	movl	%edx, 76(%esp)
	movl	32(%esp), %edx
	addl	$56, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	jmp	_DoCarry
	.p2align 4,,10
L47:
	.cfi_restore_state
	movl	36(%esp), %esi
	xorl	%eax, %eax
	jmp	L43
	.cfi_endproc
LFE5469:
	.p2align 4,,15
	.globl	_PMC_Add_XI@12
	.def	_PMC_Add_XI@12;	.scl	2;	.type	32;	.endef
_PMC_Add_XI@12:
LFB5471:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	88(%esp), %esi
	movl	80(%esp), %edi
	testl	%esi, %esi
	je	L61
	testl	%edi, %edi
	je	L61
	movl	%edi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L54
	testb	$2, 12(%edi)
	je	L56
	movl	84(%esp), %edx
	testl	%edx, %edx
	jne	L67
L58:
	movl	44(%esp), %eax
	movl	%eax, (%esi)
L54:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L56:
	.cfi_restore_state
	movl	84(%esp), %eax
	testl	%eax, %eax
	je	L68
/APP
 # 506 "pmc_internal.h" 1
	bsrl 84(%esp), %eax
 # 0 "" 2
/NO_APP
	addl	$1, %eax
	cmpl	%eax, 4(%edi)
	cmovnb	4(%edi), %eax
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	44(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L65
	movl	44(%esp), %eax
	movl	20(%edi), %edx
	movl	(%edi), %ecx
	movl	(%eax), %ebp
	movl	20(%eax), %edi
	movl	(%edx), %eax
	addl	84(%esp), %eax
	setc	31(%esp)
	subl	$1, %ebp
	addl	$4, %edi
	subl	$1, %ecx
	movl	%eax, -4(%edi)
	movsbl	31(%esp), %eax
	addl	$4, %edx
	movl	%ebp, 4(%esp)
	movl	%edi, (%esp)
	call	_DoCarry
	testl	%eax, %eax
	je	L69
L65:
	movl	%eax, %ebx
L70:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L68:
	.cfi_restore_state
	leal	44(%esp), %eax
	movl	%edi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	je	L58
	movl	%eax, %ebx
	jmp	L70
	.p2align 4,,10
L67:
	leal	44(%esp), %eax
	movl	%eax, 4(%esp)
	movl	84(%esp), %eax
	movl	%eax, (%esp)
	call	_From_I_Imp
	testl	%eax, %eax
	je	L58
	movl	%eax, %ebx
	jmp	L70
	.p2align 4,,10
L69:
	movl	44(%esp), %eax
	movl	%eax, (%esp)
	call	_CommitNumber
	jmp	L58
	.p2align 4,,10
L61:
	movl	$-1, %ebx
	jmp	L54
	.cfi_endproc
LFE5471:
	.p2align 4,,15
	.globl	_PMC_Add_XL@16
	.def	_PMC_Add_XL@16;	.scl	2;	.type	32;	.endef
_PMC_Add_XL@16:
LFB5472:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	80(%esp), %edi
	movl	84(%esp), %esi
	movl	88(%esp), %ebp
	testl	%edi, %edi
	je	L83
	movl	92(%esp), %eax
	testl	%eax, %eax
	je	L83
	movl	%edi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L71
	movl	%ebp, %eax
	testb	$2, 12(%edi)
	je	L73
	orl	%esi, %eax
	jne	L98
L75:
	movl	44(%esp), %eax
	movl	92(%esp), %ecx
	movl	%eax, (%ecx)
L71:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L73:
	.cfi_restore_state
	orl	%esi, %eax
	je	L99
	movl	4(%edi), %eax
	testl	%ebp, %ebp
	jne	L78
	testl	%esi, %esi
	je	L79
/APP
 # 506 "pmc_internal.h" 1
	bsrl %esi, %edx
 # 0 "" 2
/NO_APP
	addl	$1, %edx
	cmpl	%edx, %eax
	cmovb	%edx, %eax
L79:
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	44(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L89
	movl	44(%esp), %eax
	movl	20(%edi), %edx
	movl	(%edi), %ecx
	movl	(%eax), %ebp
	movl	20(%eax), %edi
	addl	(%edx), %esi
	setc	%al
	movl	%esi, (%edi)
	subl	$1, %ebp
	addl	$4, %edi
	movl	%ebp, 4(%esp)
	subl	$1, %ecx
	addl	$4, %edx
	movsbl	%al, %eax
	movl	%edi, (%esp)
	call	_DoCarry
	testl	%eax, %eax
	jne	L89
L80:
	movl	44(%esp), %eax
	movl	%eax, (%esp)
	call	_CommitNumber
	jmp	L75
	.p2align 4,,10
L78:
/APP
 # 506 "pmc_internal.h" 1
	bsrl %ebp, %edx
 # 0 "" 2
/NO_APP
	addl	$33, %edx
	cmpl	%eax, %edx
	cmovnb	%edx, %eax
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	44(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	je	L100
L89:
	movl	%eax, %ebx
L101:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L98:
	.cfi_restore_state
	leal	44(%esp), %eax
	movl	%esi, (%esp)
	movl	%eax, 8(%esp)
	movl	%ebp, 4(%esp)
	call	_From_L_Imp
	testl	%eax, %eax
	je	L75
	movl	%eax, %ebx
	jmp	L101
	.p2align 4,,10
L99:
	leal	44(%esp), %eax
	movl	%edi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	je	L75
	movl	%eax, %ebx
	jmp	L101
	.p2align 4,,10
L100:
	movl	(%edi), %eax
	movl	20(%edi), %ecx
	movl	44(%esp), %edx
	movl	%eax, 24(%esp)
	cmpl	$1, 24(%esp)
	movl	20(%edx), %edi
	movl	(%ecx), %eax
	ja	L81
	addl	%eax, %esi
	setc	%dl
	movl	%esi, (%edi)
	addb	$-1, %dl
	adcl	%ebx, %ebp
	movl	%ebp, 4(%edi)
	jnc	L80
	movl	$1, 8(%edi)
	jmp	L80
	.p2align 4,,10
L81:
	movl	(%edx), %edx
	addl	%eax, %esi
	setc	%al
	movl	%edx, 28(%esp)
	addb	$-1, %al
	leal	8(%ecx), %edx
	movl	%esi, (%edi)
	adcl	4(%ecx), %ebp
	movl	%ebp, 4(%edi)
	movl	28(%esp), %ecx
	setc	%al
	addl	$8, %edi
	movl	24(%esp), %esi
	movl	%edi, (%esp)
	movsbl	%al, %eax
	subl	$2, %ecx
	movl	%ecx, 4(%esp)
	subl	$2, %esi
	movl	%esi, %ecx
	call	_DoCarry
	testl	%eax, %eax
	je	L80
	movl	%eax, %ebx
	jmp	L101
	.p2align 4,,10
L83:
	movl	$-1, %ebx
	jmp	L71
	.cfi_endproc
LFE5472:
	.p2align 4,,15
	.globl	_PMC_Add_XX@12
	.def	_PMC_Add_XX@12;	.scl	2;	.type	32;	.endef
_PMC_Add_XX@12:
LFB5473:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$44, %esp
	.cfi_def_cfa_offset 64
	movl	72(%esp), %ebp
	movl	68(%esp), %edi
	movl	64(%esp), %esi
	testl	%ebp, %ebp
	sete	%dl
	testl	%edi, %edi
	sete	%al
	orb	%al, %dl
	jne	L107
	testl	%esi, %esi
	je	L107
	movl	%esi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	je	L115
L102:
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L115:
	.cfi_restore_state
	movl	%edi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L102
	movzbl	12(%edi), %eax
	andl	$2, %eax
	testb	$2, 12(%esi)
	jne	L116
	testb	%al, %al
	je	L106
	leal	28(%esp), %eax
	movl	%esi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	jne	L112
L114:
	movl	28(%esp), %edx
L105:
	movl	%edx, 0(%ebp)
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L116:
	.cfi_restore_state
	movl	$_number_zero, %edx
	testb	%al, %al
	jne	L105
	leal	28(%esp), %eax
	movl	%edi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	je	L114
	.p2align 4,,10
L112:
	movl	%eax, %ebx
	jmp	L102
	.p2align 4,,10
L106:
	movl	4(%edi), %eax
	cmpl	%eax, 4(%esi)
	cmovnb	4(%esi), %eax
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	28(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L112
	movl	28(%esp), %eax
	movl	%edi, 4(%esp)
	movl	%esi, (%esp)
	movl	%eax, 8(%esp)
	call	*_fp_Add_X_X_using_ADC
	testl	%eax, %eax
	jne	L112
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	call	_CommitNumber
	jmp	L114
	.p2align 4,,10
L107:
	movl	$-1, %ebx
	jmp	L102
	.cfi_endproc
LFE5473:
	.p2align 4,,15
	.globl	_Initialize_Add
	.def	_Initialize_Add;	.scl	2;	.type	32;	.endef
_Initialize_Add:
LFB5474:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_Add_X_X_using_ADC, %edx
	testb	$2, (%eax)
	movl	$_Add_X_X_using_ADCX, %eax
	cmove	%edx, %eax
	movl	%eax, _fp_Add_X_X_using_ADC
	xorl	%eax, %eax
	ret
	.cfi_endproc
LFE5474:
.lcomm _fp_Add_X_X_using_ADC,4,4
	.ident	"GCC: (i686-win32-dwarf-rev0, Built by MinGW-W64 project) 8.1.0"
	.def	_CheckNumber;	.scl	2;	.type	32;	.endef
	.def	_AllocateNumber;	.scl	2;	.type	32;	.endef
	.def	_DuplicateNumber;	.scl	2;	.type	32;	.endef
	.def	_From_I_Imp;	.scl	2;	.type	32;	.endef
	.def	_CommitNumber;	.scl	2;	.type	32;	.endef
	.def	_From_L_Imp;	.scl	2;	.type	32;	.endef
