	.file	"pmc_add.c"
	.text
	.p2align 4,,15
	.def	_DoCarry;	.scl	3;	.type	32;	.endef
_DoCarry:
LFB5483:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movl	%edx, %esi
	movl	%eax, %edx
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	movl	20(%esp), %ebp
	testl	%ecx, %ecx
	je	L9
	movl	%ecx, %ebx
	movl	%ebp, %edi
	testb	%al, %al
	jne	L3
	jmp	L8
	.p2align 4,,10
L23:
	movl	%edi, %ebp
	testb	%dl, %dl
	je	L8
L3:
	addl	$4, %esi
	movl	-4(%esi), %eax
	addb	$-1, %dl
	movl	$0, %edx
	leal	4(%ebp), %edi
	adcl	%edx, %eax
	movl	%eax, 0(%ebp)
	movl	24(%esp), %eax
	setc	%dl
	subl	$1, %ebx
	addl	%ebx, %eax
	subl	%ecx, %eax
	testl	%ebx, %ebx
	jne	L23
L2:
	testb	%dl, %dl
	je	L5
	testl	%eax, %eax
	je	L11
	movl	$1, (%edi)
	xorl	%eax, %eax
	popl	%ebx
	.cfi_remember_state
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.p2align 4,,10
L8:
	.cfi_restore_state
	movsl
	subl	$1, %ebx
	jne	L8
L5:
	xorl	%eax, %eax
L1:
	popl	%ebx
	.cfi_remember_state
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
L9:
	.cfi_restore_state
	movl	24(%esp), %eax
	movl	%ebp, %edi
	jmp	L2
L11:
	movl	$-5, %eax
	jmp	L1
	.cfi_endproc
LFE5483:
	.p2align 4,,15
	.def	_Add_X_X_using_ADCX;	.scl	3;	.type	32;	.endef
_Add_X_X_using_ADCX:
LFB5487:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$36, %esp
	.cfi_def_cfa_offset 56
	movl	56(%esp), %eax
	movl	60(%esp), %ecx
	movl	64(%esp), %edx
	movl	(%eax), %edi
	movl	(%ecx), %ebx
	movl	%edi, 8(%esp)
	movl	%ebx, 24(%esp)
	cmpl	%ebx, %edi
	jb	L29
	movl	%edi, 24(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, %ebx
	movl	%eax, %ecx
	movl	%ebx, %eax
L29:
	movl	20(%edx), %ebx
	movl	24(%eax), %edi
	movl	8(%esp), %eax
	movl	24(%edx), %ebp
	movl	%ebx, 28(%esp)
	movl	24(%ecx), %ebx
	shrl	$5, %eax
	movl	%edi, 20(%esp)
	movl	%ebx, 12(%esp)
	movl	%ebp, 16(%esp)
	movl	%eax, 32(%esp)
	je	L37
	movl	%ebx, (%esp)
	movl	%eax, 4(%esp)
	xorl	%eax, %eax
	.p2align 4,,10
L31:
	movl	(%esp), %edx
	movl	%edi, %ebx
	movl	%ebp, %esi
/APP
 # 334 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcxl	(%ebx), %ecx
	movl	%ecx, (%esi)
	movl	4(%edx), %ecx
	adcxl	4(%ebx), %ecx
	movl	%ecx, 4(%esi)
	movl	8(%edx), %ecx
	adcxl	8(%ebx), %ecx
	movl	%ecx, 8(%esi)
	movl	12(%edx), %ecx
	adcxl	12(%ebx), %ecx
	movl	%ecx, 12(%esi)
	movl	16(%edx), %ecx
	adcxl	16(%ebx), %ecx
	movl	%ecx, 16(%esi)
	movl	20(%edx), %ecx
	adcxl	20(%ebx), %ecx
	movl	%ecx, 20(%esi)
	movl	24(%edx), %ecx
	adcxl	24(%ebx), %ecx
	movl	%ecx, 24(%esi)
	movl	28(%edx), %ecx
	adcxl	28(%ebx), %ecx
	movl	%ecx, 28(%esi)
	movl	32(%edx), %ecx
	adcxl	32(%ebx), %ecx
	movl	%ecx, 32(%esi)
	movl	36(%edx), %ecx
	adcxl	36(%ebx), %ecx
	movl	%ecx, 36(%esi)
	movl	40(%edx), %ecx
	adcxl	40(%ebx), %ecx
	movl	%ecx, 40(%esi)
	movl	44(%edx), %ecx
	adcxl	44(%ebx), %ecx
	movl	%ecx, 44(%esi)
	movl	48(%edx), %ecx
	adcxl	48(%ebx), %ecx
	movl	%ecx, 48(%esi)
	movl	52(%edx), %ecx
	adcxl	52(%ebx), %ecx
	movl	%ecx, 52(%esi)
	movl	56(%edx), %ecx
	adcxl	56(%ebx), %ecx
	movl	%ecx, 56(%esi)
	movl	60(%edx), %ecx
	adcxl	60(%ebx), %ecx
	movl	%ecx, 60(%esi)
	movl	64(%edx), %ecx
	adcxl	64(%ebx), %ecx
	movl	%ecx, 64(%esi)
	movl	68(%edx), %ecx
	adcxl	68(%ebx), %ecx
	movl	%ecx, 68(%esi)
	movl	72(%edx), %ecx
	adcxl	72(%ebx), %ecx
	movl	%ecx, 72(%esi)
	movl	76(%edx), %ecx
	adcxl	76(%ebx), %ecx
	movl	%ecx, 76(%esi)
	movl	80(%edx), %ecx
	adcxl	80(%ebx), %ecx
	movl	%ecx, 80(%esi)
	movl	84(%edx), %ecx
	adcxl	84(%ebx), %ecx
	movl	%ecx, 84(%esi)
	movl	88(%edx), %ecx
	adcxl	88(%ebx), %ecx
	movl	%ecx, 88(%esi)
	movl	92(%edx), %ecx
	adcxl	92(%ebx), %ecx
	movl	%ecx, 92(%esi)
	movl	96(%edx), %ecx
	adcxl	96(%ebx), %ecx
	movl	%ecx, 96(%esi)
	movl	100(%edx), %ecx
	adcxl	100(%ebx), %ecx
	movl	%ecx, 100(%esi)
	movl	104(%edx), %ecx
	adcxl	104(%ebx), %ecx
	movl	%ecx, 104(%esi)
	movl	108(%edx), %ecx
	adcxl	108(%ebx), %ecx
	movl	%ecx, 108(%esi)
	movl	112(%edx), %ecx
	adcxl	112(%ebx), %ecx
	movl	%ecx, 112(%esi)
	movl	116(%edx), %ecx
	adcxl	116(%ebx), %ecx
	movl	%ecx, 116(%esi)
	movl	120(%edx), %ecx
	adcxl	120(%ebx), %ecx
	movl	%ecx, 120(%esi)
	movl	124(%edx), %ecx
	adcxl	124(%ebx), %ecx
	movl	%ecx, 124(%esi)
	setc	%al
 # 0 "" 2
/NO_APP
	subl	$-128, (%esp)
	subl	$-128, %edi
	subl	$-128, %ebp
	subl	$1, 4(%esp)
	jne	L31
	movl	32(%esp), %edx
	sall	$7, %edx
	addl	%edx, 12(%esp)
	addl	%edx, 20(%esp)
	addl	%edx, 16(%esp)
L30:
	testb	$16, 8(%esp)
	jne	L55
	testb	$8, 8(%esp)
	jne	L56
L33:
	testb	$4, 8(%esp)
	je	L34
	movl	12(%esp), %edi
	movl	20(%esp), %ebp
	movl	16(%esp), %esi
	movl	%edi, %edx
	movl	%ebp, %ebx
/APP
 # 2026 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcxl	(%ebx), %ecx
	movl	%ecx, (%esi)
	movl	4(%edx), %ecx
	adcxl	4(%ebx), %ecx
	movl	%ecx, 4(%esi)
	movl	8(%edx), %ecx
	adcxl	8(%ebx), %ecx
	movl	%ecx, 8(%esi)
	movl	12(%edx), %ecx
	adcxl	12(%ebx), %ecx
	movl	%ecx, 12(%esi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$16, %edi
	addl	$16, %ebp
	addl	$16, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%ebp, 20(%esp)
L34:
	testb	$2, 8(%esp)
	je	L35
	movl	12(%esp), %edi
	movl	20(%esp), %ebp
	movl	16(%esp), %esi
	movl	%edi, %edx
	movl	%ebp, %ebx
/APP
 # 2238 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcxl	(%ebx), %ecx
	movl	%ecx, (%esi)
	movl	4(%edx), %ecx
	adcxl	4(%ebx), %ecx
	movl	%ecx, 4(%esi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$8, %edi
	addl	$8, %ebp
	addl	$8, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%ebp, 20(%esp)
L35:
	testb	$1, 8(%esp)
	je	L36
	movl	12(%esp), %ecx
	movl	20(%esp), %edx
	addb	$-1, %al
	movl	16(%esp), %esi
	movl	(%ecx), %ebx
	movl	(%edx), %edx
	movl	%ebx, %eax
	movl	%ebx, (%esp)
	leal	4(%esi), %ebx
	adcl	%edx, %eax
	movl	%eax, (%esi)
	setc	%al
	addl	$4, %ecx
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
L36:
	movl	8(%esp), %edi
	movl	28(%esp), %edx
	movsbl	%al, %eax
	movl	24(%esp), %ecx
	subl	%edi, %edx
	movl	%edx, 60(%esp)
	movl	16(%esp), %edx
	subl	%edi, %ecx
	movl	%edx, 56(%esp)
	movl	12(%esp), %edx
	addl	$36, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	jmp	_DoCarry
	.p2align 4,,10
L55:
	.cfi_restore_state
	movl	12(%esp), %edi
	movl	20(%esp), %ebp
	movl	16(%esp), %esi
	movl	%edi, %edx
	movl	%ebp, %ebx
/APP
 # 1218 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcxl	(%ebx), %ecx
	movl	%ecx, (%esi)
	movl	4(%edx), %ecx
	adcxl	4(%ebx), %ecx
	movl	%ecx, 4(%esi)
	movl	8(%edx), %ecx
	adcxl	8(%ebx), %ecx
	movl	%ecx, 8(%esi)
	movl	12(%edx), %ecx
	adcxl	12(%ebx), %ecx
	movl	%ecx, 12(%esi)
	movl	16(%edx), %ecx
	adcxl	16(%ebx), %ecx
	movl	%ecx, 16(%esi)
	movl	20(%edx), %ecx
	adcxl	20(%ebx), %ecx
	movl	%ecx, 20(%esi)
	movl	24(%edx), %ecx
	adcxl	24(%ebx), %ecx
	movl	%ecx, 24(%esi)
	movl	28(%edx), %ecx
	adcxl	28(%ebx), %ecx
	movl	%ecx, 28(%esi)
	movl	32(%edx), %ecx
	adcxl	32(%ebx), %ecx
	movl	%ecx, 32(%esi)
	movl	36(%edx), %ecx
	adcxl	36(%ebx), %ecx
	movl	%ecx, 36(%esi)
	movl	40(%edx), %ecx
	adcxl	40(%ebx), %ecx
	movl	%ecx, 40(%esi)
	movl	44(%edx), %ecx
	adcxl	44(%ebx), %ecx
	movl	%ecx, 44(%esi)
	movl	48(%edx), %ecx
	adcxl	48(%ebx), %ecx
	movl	%ecx, 48(%esi)
	movl	52(%edx), %ecx
	adcxl	52(%ebx), %ecx
	movl	%ecx, 52(%esi)
	movl	56(%edx), %ecx
	adcxl	56(%ebx), %ecx
	movl	%ecx, 56(%esi)
	movl	60(%edx), %ecx
	adcxl	60(%ebx), %ecx
	movl	%ecx, 60(%esi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$64, %edi
	addl	$64, %ebp
	addl	$64, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%ebp, 20(%esp)
	testb	$8, 8(%esp)
	je	L33
L56:
	movl	12(%esp), %edi
	movl	20(%esp), %ebp
	movl	16(%esp), %esi
	movl	%edi, %edx
	movl	%ebp, %ebx
/APP
 # 1718 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcxl	(%ebx), %ecx
	movl	%ecx, (%esi)
	movl	4(%edx), %ecx
	adcxl	4(%ebx), %ecx
	movl	%ecx, 4(%esi)
	movl	8(%edx), %ecx
	adcxl	8(%ebx), %ecx
	movl	%ecx, 8(%esi)
	movl	12(%edx), %ecx
	adcxl	12(%ebx), %ecx
	movl	%ecx, 12(%esi)
	movl	16(%edx), %ecx
	adcxl	16(%ebx), %ecx
	movl	%ecx, 16(%esi)
	movl	20(%edx), %ecx
	adcxl	20(%ebx), %ecx
	movl	%ecx, 20(%esi)
	movl	24(%edx), %ecx
	adcxl	24(%ebx), %ecx
	movl	%ecx, 24(%esi)
	movl	28(%edx), %ecx
	adcxl	28(%ebx), %ecx
	movl	%ecx, 28(%esi)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$32, %edi
	addl	$32, %ebp
	addl	$32, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%ebp, 20(%esp)
	jmp	L33
	.p2align 4,,10
L37:
	xorl	%eax, %eax
	jmp	L30
	.cfi_endproc
LFE5487:
	.p2align 4,,15
	.def	_Add_X_X_using_ADC;	.scl	3;	.type	32;	.endef
_Add_X_X_using_ADC:
LFB5486:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$24, %esp
	.cfi_def_cfa_offset 44
	movl	44(%esp), %eax
	movl	48(%esp), %ecx
	movl	52(%esp), %edx
	movl	(%ecx), %edi
	movl	(%eax), %esi
	movl	%edi, 16(%esp)
	cmpl	%edi, %esi
	jb	L58
	movl	%ecx, %ebx
	movl	%esi, 16(%esp)
	movl	%eax, %ecx
	movl	%edi, %esi
	movl	%ebx, %eax
L58:
	movl	20(%edx), %ebx
	movl	24(%eax), %ebp
	movl	24(%edx), %eax
	movl	%ebx, 20(%esp)
	movl	24(%ecx), %ebx
	movl	%eax, 12(%esp)
	movl	%esi, %eax
	shrl	$5, %eax
	movl	%ebx, 8(%esp)
	je	L59
L60:
	jmp	L60
	.p2align 4,,10
L59:
	xorl	%eax, %eax
	movl	8(%esp), %edx
	movl	%ebp, %ebx
	movl	12(%esp), %edi
/APP
 # 81 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcl	(%ebx), %ecx
	movl	%ecx, (%edi)
	movl	4(%edx), %ecx
	adcl	4(%ebx), %ecx
	movl	%ecx, 4(%edi)
	movl	8(%edx), %ecx
	adcl	8(%ebx), %ecx
	movl	%ecx, 8(%edi)
	movl	12(%edx), %ecx
	adcl	12(%ebx), %ecx
	movl	%ecx, 12(%edi)
	movl	16(%edx), %ecx
	adcl	16(%ebx), %ecx
	movl	%ecx, 16(%edi)
	movl	20(%edx), %ecx
	adcl	20(%ebx), %ecx
	movl	%ecx, 20(%edi)
	movl	24(%edx), %ecx
	adcl	24(%ebx), %ecx
	movl	%ecx, 24(%edi)
	movl	28(%edx), %ecx
	adcl	28(%ebx), %ecx
	movl	%ecx, 28(%edi)
	movl	32(%edx), %ecx
	adcl	32(%ebx), %ecx
	movl	%ecx, 32(%edi)
	movl	36(%edx), %ecx
	adcl	36(%ebx), %ecx
	movl	%ecx, 36(%edi)
	movl	40(%edx), %ecx
	adcl	40(%ebx), %ecx
	movl	%ecx, 40(%edi)
	movl	44(%edx), %ecx
	adcl	44(%ebx), %ecx
	movl	%ecx, 44(%edi)
	movl	48(%edx), %ecx
	adcl	48(%ebx), %ecx
	movl	%ecx, 48(%edi)
	movl	52(%edx), %ecx
	adcl	52(%ebx), %ecx
	movl	%ecx, 52(%edi)
	movl	56(%edx), %ecx
	adcl	56(%ebx), %ecx
	movl	%ecx, 56(%edi)
	movl	60(%edx), %ecx
	adcl	60(%ebx), %ecx
	movl	%ecx, 60(%edi)
	movl	64(%edx), %ecx
	adcl	64(%ebx), %ecx
	movl	%ecx, 64(%edi)
	movl	68(%edx), %ecx
	adcl	68(%ebx), %ecx
	movl	%ecx, 68(%edi)
	movl	72(%edx), %ecx
	adcl	72(%ebx), %ecx
	movl	%ecx, 72(%edi)
	movl	76(%edx), %ecx
	adcl	76(%ebx), %ecx
	movl	%ecx, 76(%edi)
	movl	80(%edx), %ecx
	adcl	80(%ebx), %ecx
	movl	%ecx, 80(%edi)
	movl	84(%edx), %ecx
	adcl	84(%ebx), %ecx
	movl	%ecx, 84(%edi)
	movl	88(%edx), %ecx
	adcl	88(%ebx), %ecx
	movl	%ecx, 88(%edi)
	movl	92(%edx), %ecx
	adcl	92(%ebx), %ecx
	movl	%ecx, 92(%edi)
	movl	96(%edx), %ecx
	adcl	96(%ebx), %ecx
	movl	%ecx, 96(%edi)
	movl	100(%edx), %ecx
	adcl	100(%ebx), %ecx
	movl	%ecx, 100(%edi)
	movl	104(%edx), %ecx
	adcl	104(%ebx), %ecx
	movl	%ecx, 104(%edi)
	movl	108(%edx), %ecx
	adcl	108(%ebx), %ecx
	movl	%ecx, 108(%edi)
	movl	112(%edx), %ecx
	adcl	112(%ebx), %ecx
	movl	%ecx, 112(%edi)
	movl	116(%edx), %ecx
	adcl	116(%ebx), %ecx
	movl	%ecx, 116(%edi)
	movl	120(%edx), %ecx
	adcl	120(%ebx), %ecx
	movl	%ecx, 120(%edi)
	movl	124(%edx), %ecx
	adcl	124(%ebx), %ecx
	movl	%ecx, 124(%edi)
	setc	%al
 # 0 "" 2
/NO_APP
	movl	8(%esp), %ecx
	leal	128(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	128(%ecx), %ebx
	movl	12(%esp), %ecx
	movl	%ebx, (%esp)
	leal	128(%ecx), %ebx
	testl	$16, %esi
	jne	L82
	testl	$8, %esi
	jne	L83
L62:
	testl	$4, %esi
	je	L63
	movl	4(%esp), %ecx
	movl	(%esp), %edi
	movl	%ebx, %ebp
	movl	%ecx, %edx
/APP
 # 1969 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edi), %ecx
	adcl	(%edx), %ecx
	movl	%ecx, (%ebp)
	movl	4(%edi), %ecx
	adcl	4(%edx), %ecx
	movl	%ecx, 4(%ebp)
	movl	8(%edi), %ecx
	adcl	8(%edx), %ecx
	movl	%ecx, 8(%ebp)
	movl	12(%edi), %ecx
	adcl	12(%edx), %ecx
	movl	%ecx, 12(%ebp)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$16, (%esp)
	addl	$16, %ebx
	addl	$16, 4(%esp)
L63:
	testl	$2, %esi
	je	L64
	movl	4(%esp), %ecx
	movl	(%esp), %edx
	movl	%ebx, %ebp
	movl	%ecx, %edi
/APP
 # 2195 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcl	(%edi), %ecx
	movl	%ecx, (%ebp)
	movl	4(%edx), %ecx
	adcl	4(%edi), %ecx
	movl	%ecx, 4(%ebp)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$8, (%esp)
	addl	$8, %ebx
	addl	$8, 4(%esp)
L64:
	testl	$1, %esi
	je	L65
	movl	4(%esp), %ecx
	movl	(%esp), %edx
	addb	$-1, %al
	movl	(%ecx), %ecx
	movl	%ecx, %eax
	adcl	(%edx), %eax
	movl	%eax, (%ebx)
	setc	%al
	addl	$4, %edx
	addl	$4, %ebx
	movl	%edx, (%esp)
L65:
	movl	20(%esp), %edi
	movl	16(%esp), %ecx
	movl	%ebx, 44(%esp)
	movsbl	%al, %eax
	movl	(%esp), %edx
	subl	%esi, %edi
	subl	%esi, %ecx
	movl	%edi, 48(%esp)
	addl	$24, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	jmp	_DoCarry
	.p2align 4,,10
L82:
	.cfi_restore_state
	movl	(%esp), %edx
	leal	128(%ebp), %edi
/APP
 # 1077 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcl	(%edi), %ecx
	movl	%ecx, (%ebx)
	movl	4(%edx), %ecx
	adcl	4(%edi), %ecx
	movl	%ecx, 4(%ebx)
	movl	8(%edx), %ecx
	adcl	8(%edi), %ecx
	movl	%ecx, 8(%ebx)
	movl	12(%edx), %ecx
	adcl	12(%edi), %ecx
	movl	%ecx, 12(%ebx)
	movl	16(%edx), %ecx
	adcl	16(%edi), %ecx
	movl	%ecx, 16(%ebx)
	movl	20(%edx), %ecx
	adcl	20(%edi), %ecx
	movl	%ecx, 20(%ebx)
	movl	24(%edx), %ecx
	adcl	24(%edi), %ecx
	movl	%ecx, 24(%ebx)
	movl	28(%edx), %ecx
	adcl	28(%edi), %ecx
	movl	%ecx, 28(%ebx)
	movl	32(%edx), %ecx
	adcl	32(%edi), %ecx
	movl	%ecx, 32(%ebx)
	movl	36(%edx), %ecx
	adcl	36(%edi), %ecx
	movl	%ecx, 36(%ebx)
	movl	40(%edx), %ecx
	adcl	40(%edi), %ecx
	movl	%ecx, 40(%ebx)
	movl	44(%edx), %ecx
	adcl	44(%edi), %ecx
	movl	%ecx, 44(%ebx)
	movl	48(%edx), %ecx
	adcl	48(%edi), %ecx
	movl	%ecx, 48(%ebx)
	movl	52(%edx), %ecx
	adcl	52(%edi), %ecx
	movl	%ecx, 52(%ebx)
	movl	56(%edx), %ecx
	adcl	56(%edi), %ecx
	movl	%ecx, 56(%ebx)
	movl	60(%edx), %ecx
	adcl	60(%edi), %ecx
	movl	%ecx, 60(%ebx)
	setc	%al
 # 0 "" 2
/NO_APP
	leal	192(%ebp), %ebx
	movl	8(%esp), %edx
	movl	%ebx, 4(%esp)
	movl	12(%esp), %ebx
	addl	$192, %edx
	movl	%edx, (%esp)
	addl	$192, %ebx
	testl	$8, %esi
	je	L62
L83:
	movl	4(%esp), %ecx
	movl	(%esp), %edx
	movl	%ebx, %ebp
	movl	%ecx, %edi
/APP
 # 1633 "autogenerated.h" 1
	addb	$-1, %al
	movl	(%edx), %ecx
	adcl	(%edi), %ecx
	movl	%ecx, (%ebp)
	movl	4(%edx), %ecx
	adcl	4(%edi), %ecx
	movl	%ecx, 4(%ebp)
	movl	8(%edx), %ecx
	adcl	8(%edi), %ecx
	movl	%ecx, 8(%ebp)
	movl	12(%edx), %ecx
	adcl	12(%edi), %ecx
	movl	%ecx, 12(%ebp)
	movl	16(%edx), %ecx
	adcl	16(%edi), %ecx
	movl	%ecx, 16(%ebp)
	movl	20(%edx), %ecx
	adcl	20(%edi), %ecx
	movl	%ecx, 20(%ebp)
	movl	24(%edx), %ecx
	adcl	24(%edi), %ecx
	movl	%ecx, 24(%ebp)
	movl	28(%edx), %ecx
	adcl	28(%edi), %ecx
	movl	%ecx, 28(%ebp)
	setc	%al
 # 0 "" 2
/NO_APP
	addl	$32, (%esp)
	addl	$32, %ebx
	addl	$32, 4(%esp)
	jmp	L62
	.cfi_endproc
LFE5486:
	.p2align 4,,15
	.globl	_PMC_Add_X_I@12
	.def	_PMC_Add_X_I@12;	.scl	2;	.type	32;	.endef
_PMC_Add_X_I@12:
LFB5489:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	88(%esp), %esi
	movl	80(%esp), %edi
	testl	%esi, %esi
	je	L91
	testl	%edi, %edi
	je	L91
	movl	%edi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L84
	testb	$2, 16(%edi)
	je	L86
	movl	84(%esp), %edx
	testl	%edx, %edx
	jne	L87
	movl	$_number_zero, (%esi)
L84:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L86:
	.cfi_restore_state
	movl	84(%esp), %eax
	testl	%eax, %eax
	je	L95
/APP
 # 553 "pmc_internal.h" 1
	bsrl 84(%esp), %eax
 # 0 "" 2
/NO_APP
	addl	$1, %eax
	cmpl	%eax, 4(%edi)
	cmovnb	4(%edi), %eax
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	44(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L93
	movl	44(%esp), %eax
	movl	24(%edi), %edx
	movl	(%edi), %ecx
	movl	20(%eax), %ebp
	movl	24(%eax), %edi
	movl	(%edx), %eax
	addl	84(%esp), %eax
	setc	31(%esp)
	addl	$4, %edi
	subl	$1, %ebp
	subl	$1, %ecx
	movl	%eax, -4(%edi)
	movsbl	31(%esp), %eax
	addl	$4, %edx
	movl	%edi, (%esp)
	movl	%ebp, 4(%esp)
	call	_DoCarry
	movl	%eax, %edi
	movl	44(%esp), %eax
	movl	%eax, (%esp)
	testl	%edi, %edi
	jne	L96
	call	_CommitNumber
L89:
	movl	44(%esp), %eax
	movl	%eax, (%esi)
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L95:
	.cfi_restore_state
	leal	44(%esp), %eax
	movl	%edi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	je	L89
L93:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%eax, %ebx
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L87:
	.cfi_restore_state
	leal	44(%esp), %eax
	movl	%eax, 4(%esp)
	movl	84(%esp), %eax
	movl	%eax, (%esp)
	call	_From_I_Imp
	movl	%eax, %ebx
	testl	%eax, %eax
	je	L89
	jmp	L84
	.p2align 4,,10
L96:
	call	_DeallocateNumber
	movl	%edi, %ebx
	jmp	L84
	.p2align 4,,10
L91:
	movl	$-1, %ebx
	jmp	L84
	.cfi_endproc
LFE5489:
	.p2align 4,,15
	.globl	_PMC_Add_X_L@16
	.def	_PMC_Add_X_L@16;	.scl	2;	.type	32;	.endef
_PMC_Add_X_L@16:
LFB5490:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$60, %esp
	.cfi_def_cfa_offset 80
	movl	80(%esp), %edi
	movl	84(%esp), %esi
	movl	88(%esp), %ebp
	testl	%edi, %edi
	je	L108
	movl	92(%esp), %eax
	testl	%eax, %eax
	je	L108
	movl	%edi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L97
	movl	%ebp, %eax
	testb	$2, 16(%edi)
	je	L99
	orl	%esi, %eax
	jne	L100
	movl	92(%esp), %eax
	movl	$_number_zero, (%eax)
L97:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L99:
	.cfi_restore_state
	orl	%esi, %eax
	je	L125
	movl	4(%edi), %eax
	testl	%ebp, %ebp
	jne	L103
	testl	%esi, %esi
	je	L104
/APP
 # 553 "pmc_internal.h" 1
	bsrl %esi, %edx
 # 0 "" 2
/NO_APP
	addl	$1, %edx
	cmpl	%edx, %eax
	cmovb	%edx, %eax
L104:
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	44(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L111
	movl	44(%esp), %eax
	movl	24(%edi), %edx
	movl	(%edi), %ecx
	movl	20(%eax), %ebp
	movl	24(%eax), %edi
	addl	(%edx), %esi
	setc	%al
	movl	%esi, (%edi)
	subl	$1, %ebp
	addl	$4, %edi
	movl	%ebp, 4(%esp)
	subl	$1, %ecx
	addl	$4, %edx
	movsbl	%al, %eax
	movl	%edi, (%esp)
	call	_DoCarry
	testl	%eax, %eax
	jne	L126
L107:
	movl	44(%esp), %eax
	movl	%eax, (%esp)
	call	_CommitNumber
L102:
	movl	44(%esp), %eax
	movl	92(%esp), %ecx
	movl	%eax, (%ecx)
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L103:
	.cfi_restore_state
/APP
 # 553 "pmc_internal.h" 1
	bsrl %ebp, %edx
 # 0 "" 2
/NO_APP
	addl	$33, %edx
	cmpl	%eax, %edx
	cmovnb	%edx, %eax
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	44(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	je	L127
L111:
	movl	%eax, %ebx
L128:
	addl	$60, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$16
	.p2align 4,,10
L100:
	.cfi_restore_state
	leal	44(%esp), %eax
	movl	%esi, (%esp)
	movl	%eax, 8(%esp)
	movl	%ebp, 4(%esp)
	call	_From_L_Imp
	movl	%eax, %ebx
	testl	%eax, %eax
	je	L102
	jmp	L97
	.p2align 4,,10
L125:
	leal	44(%esp), %eax
	movl	%edi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	je	L102
	movl	%eax, %ebx
	jmp	L128
	.p2align 4,,10
L127:
	movl	(%edi), %eax
	movl	24(%edi), %ecx
	movl	44(%esp), %edx
	movl	%eax, 24(%esp)
	cmpl	$1, 24(%esp)
	movl	24(%edx), %edi
	movl	(%ecx), %eax
	ja	L106
	addl	%eax, %esi
	setc	%dl
	movl	%esi, (%edi)
	addb	$-1, %dl
	adcl	%ebx, %ebp
	movl	%ebp, 4(%edi)
	jnc	L107
	movl	$1, 8(%edi)
	jmp	L107
	.p2align 4,,10
L106:
	movl	20(%edx), %edx
	addl	%eax, %esi
	setc	%al
	movl	%edx, 28(%esp)
	addb	$-1, %al
	leal	8(%ecx), %edx
	movl	%esi, (%edi)
	adcl	4(%ecx), %ebp
	movl	%ebp, 4(%edi)
	movl	28(%esp), %ecx
	setc	%al
	addl	$8, %edi
	movl	24(%esp), %esi
	movl	%edi, (%esp)
	movsbl	%al, %eax
	subl	$2, %ecx
	movl	%ecx, 4(%esp)
	subl	$2, %esi
	movl	%esi, %ecx
	call	_DoCarry
	movl	%eax, %esi
	testl	%eax, %eax
	je	L107
	movl	44(%esp), %eax
	movl	%esi, %ebx
	movl	%eax, (%esp)
	call	_DeallocateNumber
	jmp	L97
	.p2align 4,,10
L126:
	movl	44(%esp), %edx
	movl	%eax, 24(%esp)
	movl	%edx, (%esp)
	call	_DeallocateNumber
	movl	24(%esp), %eax
	movl	%eax, %ebx
	jmp	L97
	.p2align 4,,10
L108:
	movl	$-1, %ebx
	jmp	L97
	.cfi_endproc
LFE5490:
	.p2align 4,,15
	.globl	_PMC_Add_X_X@12
	.def	_PMC_Add_X_X@12;	.scl	2;	.type	32;	.endef
_PMC_Add_X_X@12:
LFB5491:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$44, %esp
	.cfi_def_cfa_offset 64
	movl	72(%esp), %ebp
	movl	68(%esp), %edi
	movl	64(%esp), %esi
	testl	%ebp, %ebp
	sete	%dl
	testl	%edi, %edi
	sete	%al
	orb	%al, %dl
	jne	L135
	testl	%esi, %esi
	je	L135
	movl	%esi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	je	L142
L129:
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L142:
	.cfi_restore_state
	movl	%edi, (%esp)
	call	_CheckNumber
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	L129
	movzbl	16(%edi), %eax
	andl	$2, %eax
	testb	$2, 16(%esi)
	jne	L143
	testb	%al, %al
	je	L133
	leal	28(%esp), %eax
	movl	%esi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	jne	L139
L141:
	movl	28(%esp), %edx
L132:
	movl	%edx, 0(%ebp)
	addl	$44, %esp
	.cfi_remember_state
	.cfi_def_cfa_offset 20
	movl	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret	$12
	.p2align 4,,10
L143:
	.cfi_restore_state
	movl	$_number_zero, %edx
	testb	%al, %al
	jne	L132
	leal	28(%esp), %eax
	movl	%edi, (%esp)
	movl	%eax, 4(%esp)
	call	_DuplicateNumber
	testl	%eax, %eax
	je	L141
L139:
	movl	%eax, %ebx
	jmp	L129
	.p2align 4,,10
L133:
	movl	4(%edi), %eax
	cmpl	%eax, 4(%esi)
	cmovnb	4(%esi), %eax
	addl	$1, %eax
	movl	%eax, 4(%esp)
	leal	28(%esp), %eax
	movl	%eax, (%esp)
	call	_AllocateNumber
	testl	%eax, %eax
	jne	L139
	movl	28(%esp), %eax
	movl	%esi, (%esp)
	movl	%edi, 4(%esp)
	movl	%eax, 8(%esp)
	call	*_fp_Add_X_X_using_ADC
	movl	%eax, %esi
	movl	28(%esp), %eax
	movl	%eax, (%esp)
	testl	%esi, %esi
	jne	L144
	call	_CommitNumber
	jmp	L141
	.p2align 4,,10
L144:
	call	_DeallocateNumber
	movl	%esi, %ebx
	jmp	L129
	.p2align 4,,10
L135:
	movl	$-1, %ebx
	jmp	L129
	.cfi_endproc
LFE5491:
	.p2align 4,,15
	.globl	_Initialize_Add
	.def	_Initialize_Add;	.scl	2;	.type	32;	.endef
_Initialize_Add:
LFB5492:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	$_Add_X_X_using_ADC, %edx
	testb	$2, (%eax)
	movl	$_Add_X_X_using_ADCX, %eax
	cmove	%edx, %eax
	movl	%eax, _fp_Add_X_X_using_ADC
	xorl	%eax, %eax
	ret
	.cfi_endproc
LFE5492:
.lcomm _fp_Add_X_X_using_ADC,4,4
	.ident	"GCC: (i686-win32-dwarf-rev0, Built by MinGW-W64 project) 8.1.0"
	.def	_CheckNumber;	.scl	2;	.type	32;	.endef
	.def	_AllocateNumber;	.scl	2;	.type	32;	.endef
	.def	_CommitNumber;	.scl	2;	.type	32;	.endef
	.def	_DuplicateNumber;	.scl	2;	.type	32;	.endef
	.def	_From_I_Imp;	.scl	2;	.type	32;	.endef
	.def	_DeallocateNumber;	.scl	2;	.type	32;	.endef
	.def	_From_L_Imp;	.scl	2;	.type	32;	.endef
