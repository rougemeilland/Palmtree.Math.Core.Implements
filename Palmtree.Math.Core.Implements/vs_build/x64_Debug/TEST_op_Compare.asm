; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__1C66ECB2_pmc_debug@h DB 01H
__C615ED99_test_op_compare@c DB 01H
msvcjmc	ENDS
PUBLIC	TEST_PMC_Compare_X_I
PUBLIC	TEST_PMC_Compare_X_L
PUBLIC	TEST_PMC_Compare_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@ ; `string'
PUBLIC	??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0DC@JJJOEBHL@PMC_Compare_X_I?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@ ; `string'
PUBLIC	??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@ ; `string'
PUBLIC	??_C@_0BI@FHKCNDAI@PMC_Compare_X_L?5?$CI?$CFd?4?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0DC@DELOMNHJ@PMC_Compare_X_L?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@ ; `string'
PUBLIC	??_C@_0BI@HJOHPCJK@PMC_Compare_X_X?5?$CI?$CFd?4?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0DC@ONKPPHLC@PMC_Compare_X_X?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@ ; `string'
EXTRN	TEST_Assert:PROC
EXTRN	FormatTestLabel:PROC
EXTRN	FormatTestMesssage:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_PMC_Compare_X_I DD imagerel $LN10
	DD	imagerel $LN10+474
	DD	imagerel $unwind$TEST_PMC_Compare_X_I
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_PMC_Compare_X_L DD imagerel $LN10
	DD	imagerel $LN10+475
	DD	imagerel $unwind$TEST_PMC_Compare_X_L
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_PMC_Compare_X_X DD imagerel $LN13
	DD	imagerel $LN13+653
	DD	imagerel $unwind$TEST_PMC_Compare_X_X
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0DC@ONKPPHLC@PMC_Compare_X_X?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@
CONST	SEGMENT
??_C@_0DC@ONKPPHLC@PMC_Compare_X_X?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@ DB 'P'
	DB	'MC_Compare_X_X', 082H, 0ccH, 095H, 09cH, 08bH, 'A', 083H, 'R', 081H
	DB	'[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H, 092H, 0caH
	DB	082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H, 0a2H, '('
	DB	'%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HJOHPCJK@PMC_Compare_X_X?5?$CI?$CFd?4?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BI@HJOHPCJK@PMC_Compare_X_X?5?$CI?$CFd?4?$CFd?$CJ@ DB 'PMC_Compare'
	DB	'_X_X (%d.%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DELOMNHJ@PMC_Compare_X_L?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@
CONST	SEGMENT
??_C@_0DC@DELOMNHJ@PMC_Compare_X_L?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@ DB 'P'
	DB	'MC_Compare_X_L', 082H, 0ccH, 095H, 09cH, 08bH, 'A', 083H, 'R', 081H
	DB	'[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H, 092H, 0caH
	DB	082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H, 0a2H, '('
	DB	'%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FHKCNDAI@PMC_Compare_X_L?5?$CI?$CFd?4?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BI@FHKCNDAI@PMC_Compare_X_L?5?$CI?$CFd?4?$CFd?$CJ@ DB 'PMC_Compare'
	DB	'_X_L (%d.%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@
CONST	SEGMENT
??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@ DB 083H
	DB	'f', 081H, '[', 083H, '^', 082H, 0ccH, 093H, 0e0H, 097H, 'e', 082H
	DB	0aaH, 088H, 0eaH, 092H, 'v', 082H, 0b5H, 082H, 0c8H, 082H, 0a2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@JJJOEBHL@PMC_Compare_X_I?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@
CONST	SEGMENT
??_C@_0DC@JJJOEBHL@PMC_Compare_X_I?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@ DB 'P'
	DB	'MC_Compare_X_I', 082H, 0ccH, 095H, 09cH, 08bH, 'A', 083H, 'R', 081H
	DB	'[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H, 092H, 0caH
	DB	082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H, 0a2H, '('
	DB	'%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@ DB 'PMC_Compare'
	DB	'_X_I (%d.%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@
CONST	SEGMENT
??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@ DB 'P'
	DB	'MC_From_B', 082H, 0ccH, 095H, 09cH, 08bH, 'A', 083H, 'R', 081H
	DB	'[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H, 092H, 0caH
	DB	082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H, 0a2H, '('
	DB	'%d)', 00H					; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_PMC_Compare_X_X DD 025053901H
	DD	011d2322H
	DD	070160035H
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
TEST_PMC_Compare_X_X$rtcName$0 DB 078H
	DB	00H
	ORG $+2
TEST_PMC_Compare_X_X$rtcName$1 DB 079H
	DB	00H
	ORG $+2
TEST_PMC_Compare_X_X$rtcName$2 DB 061H
	DB	063H
	DB	074H
	DB	075H
	DB	061H
	DB	06cH
	DB	05fH
	DB	07aH
	DB	00H
	ORG $+15
TEST_PMC_Compare_X_X$rtcVarDesc DD 064H
	DD	04H
	DQ	FLAT:TEST_PMC_Compare_X_X$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:TEST_PMC_Compare_X_X$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:TEST_PMC_Compare_X_X$rtcName$0
	ORG $+144
TEST_PMC_Compare_X_X$rtcFrameData DD 03H
	DD	00H
	DQ	FLAT:TEST_PMC_Compare_X_X$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_PMC_Compare_X_L DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
TEST_PMC_Compare_X_L$rtcName$0 DB 078H
	DB	00H
	ORG $+6
TEST_PMC_Compare_X_L$rtcName$1 DB 061H
	DB	063H
	DB	074H
	DB	075H
	DB	061H
	DB	06cH
	DB	05fH
	DB	07aH
	DB	00H
	ORG $+15
TEST_PMC_Compare_X_L$rtcVarDesc DD 044H
	DD	04H
	DQ	FLAT:TEST_PMC_Compare_X_L$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:TEST_PMC_Compare_X_L$rtcName$0
	ORG $+96
TEST_PMC_Compare_X_L$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:TEST_PMC_Compare_X_L$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_PMC_Compare_X_I DD 025053901H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
TEST_PMC_Compare_X_I$rtcName$0 DB 078H
	DB	00H
	ORG $+6
TEST_PMC_Compare_X_I$rtcName$1 DB 061H
	DB	063H
	DB	074H
	DB	075H
	DB	061H
	DB	06cH
	DB	05fH
	DB	07aH
	DB	00H
	ORG $+15
TEST_PMC_Compare_X_I$rtcVarDesc DD 044H
	DD	04H
	DQ	FLAT:TEST_PMC_Compare_X_I$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:TEST_PMC_Compare_X_I$rtcName$0
	ORG $+96
TEST_PMC_Compare_X_I$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:TEST_PMC_Compare_X_I$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\test_op_compare.c
;	COMDAT TEST_PMC_Compare_X_X
_TEXT	SEGMENT
x$ = 8
y$ = 40
actual_z$ = 68
result$ = 100
x_result$ = 132
y_result$ = 164
tv152 = 372
tv142 = 372
tv92 = 372
tv74 = 372
tv132 = 376
tv82 = 376
tv64 = 376
env$ = 416
ep$ = 424
no$ = 432
x_buf$ = 440
x_buf_size$ = 448
y_buf$ = 456
y_buf_size$ = 464
desired_z$ = 472
TEST_PMC_Compare_X_X PROC				; COMDAT

; 65   : {

$LN13:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+456]
	lea	rcx, OFFSET FLAT:__C615ED99_test_op_compare@c
	call	__CheckForDebuggerJustMyCode

; 66   :     HANDLE x;
; 67   :     HANDLE y;
; 68   :     int actual_z;
; 69   :     PMC_STATUS_CODE result;
; 70   :     PMC_STATUS_CODE x_result;
; 71   :     PMC_STATUS_CODE y_result;
; 72   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_X (%d.%d)", no, 1), (x_result = ep->PMC_From_B(x_buf, x_buf_size, &x)) == PMC_STATUS_OK, FormatTestMesssage("PMC_From_Bの復帰コードが期待通りではない(%d)", x_result));

	lea	r8, QWORD PTR x$[rbp]
	mov	rdx, QWORD PTR x_buf_size$[rbp]
	mov	rcx, QWORD PTR x_buf$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+32]
	mov	DWORD PTR x_result$[rbp], eax
	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN5@TEST_PMC_C
	mov	DWORD PTR tv74[rbp], 1
	jmp	SHORT $LN6@TEST_PMC_C
$LN5@TEST_PMC_C:
	mov	DWORD PTR tv74[rbp], 0
$LN6@TEST_PMC_C:
	mov	edx, DWORD PTR x_result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@
	call	FormatTestMesssage
	mov	QWORD PTR tv64[rbp], rax
	mov	r8d, 1
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@HJOHPCJK@PMC_Compare_X_X?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv64[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv74[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 73   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_X (%d.%d)", no, 2), (y_result = ep->PMC_From_B(y_buf, y_buf_size, &y)) == PMC_STATUS_OK, FormatTestMesssage("PMC_From_Bの復帰コードが期待通りではない(%d)", y_result));

	lea	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR y_buf_size$[rbp]
	mov	rcx, QWORD PTR y_buf$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+32]
	mov	DWORD PTR y_result$[rbp], eax
	cmp	DWORD PTR y_result$[rbp], 0
	jne	SHORT $LN7@TEST_PMC_C
	mov	DWORD PTR tv92[rbp], 1
	jmp	SHORT $LN8@TEST_PMC_C
$LN7@TEST_PMC_C:
	mov	DWORD PTR tv92[rbp], 0
$LN8@TEST_PMC_C:
	mov	edx, DWORD PTR y_result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@
	call	FormatTestMesssage
	mov	QWORD PTR tv82[rbp], rax
	mov	r8d, 2
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@HJOHPCJK@PMC_Compare_X_X?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv92[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 74   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_X (%d.%d)", no, 3), (result = ep->PMC_Compare_X_X(x, y, &actual_z)) == PMC_STATUS_OK, FormatTestMesssage("PMC_Compare_X_Xの復帰コードが期待通りではない(%d)", result));

	lea	r8, QWORD PTR actual_z$[rbp]
	mov	rdx, QWORD PTR y$[rbp]
	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+288]
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	jne	SHORT $LN9@TEST_PMC_C
	mov	DWORD PTR tv142[rbp], 1
	jmp	SHORT $LN10@TEST_PMC_C
$LN9@TEST_PMC_C:
	mov	DWORD PTR tv142[rbp], 0
$LN10@TEST_PMC_C:
	mov	edx, DWORD PTR result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0DC@ONKPPHLC@PMC_Compare_X_X?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@
	call	FormatTestMesssage
	mov	QWORD PTR tv132[rbp], rax
	mov	r8d, 3
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@HJOHPCJK@PMC_Compare_X_X?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv132[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv142[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 75   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_I (%d.%d)", no, 4), actual_z == desired_z, "データの内容が一致しない");

	mov	eax, DWORD PTR desired_z$[rbp]
	cmp	DWORD PTR actual_z$[rbp], eax
	jne	SHORT $LN11@TEST_PMC_C
	mov	DWORD PTR tv152[rbp], 1
	jmp	SHORT $LN12@TEST_PMC_C
$LN11@TEST_PMC_C:
	mov	DWORD PTR tv152[rbp], 0
$LN12@TEST_PMC_C:
	mov	r8d, 4
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	lea	r9, OFFSET FLAT:??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@
	mov	r8d, DWORD PTR tv152[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 76   :     if (y_result == PMC_STATUS_OK)

	cmp	DWORD PTR y_result$[rbp], 0
	jne	SHORT $LN2@TEST_PMC_C

; 77   :         ep->PMC_Dispose(y);

	mov	rcx, QWORD PTR y$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+40]
$LN2@TEST_PMC_C:

; 78   :     if (x_result == PMC_STATUS_OK)

	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN3@TEST_PMC_C

; 79   :         ep->PMC_Dispose(x);

	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+40]
$LN3@TEST_PMC_C:

; 80   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:TEST_PMC_Compare_X_X$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
TEST_PMC_Compare_X_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\test_op_compare.c
;	COMDAT TEST_PMC_Compare_X_L
_TEXT	SEGMENT
x$ = 8
actual_z$ = 36
result$ = 68
x_result$ = 100
tv134 = 308
tv92 = 308
tv74 = 308
tv82 = 312
tv64 = 312
env$ = 352
ep$ = 360
no$ = 368
x_buf$ = 376
x_buf_size$ = 384
y$ = 392
desired_z$ = 400
TEST_PMC_Compare_X_L PROC				; COMDAT

; 52   : {

$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__C615ED99_test_op_compare@c
	call	__CheckForDebuggerJustMyCode

; 53   :     HANDLE x;
; 54   :     int actual_z;
; 55   :     PMC_STATUS_CODE result;
; 56   :     PMC_STATUS_CODE x_result;
; 57   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_L (%d.%d)", no, 1), (x_result = ep->PMC_From_B(x_buf, x_buf_size, &x)) == PMC_STATUS_OK, FormatTestMesssage("PMC_From_Bの復帰コードが期待通りではない(%d)", x_result));

	lea	r8, QWORD PTR x$[rbp]
	mov	rdx, QWORD PTR x_buf_size$[rbp]
	mov	rcx, QWORD PTR x_buf$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+32]
	mov	DWORD PTR x_result$[rbp], eax
	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN4@TEST_PMC_C
	mov	DWORD PTR tv74[rbp], 1
	jmp	SHORT $LN5@TEST_PMC_C
$LN4@TEST_PMC_C:
	mov	DWORD PTR tv74[rbp], 0
$LN5@TEST_PMC_C:
	mov	edx, DWORD PTR x_result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@
	call	FormatTestMesssage
	mov	QWORD PTR tv64[rbp], rax
	mov	r8d, 1
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@FHKCNDAI@PMC_Compare_X_L?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv64[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv74[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 58   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_L (%d.%d)", no, 2), (result = ep->PMC_Compare_X_L(x, y, &actual_z)) == PMC_STATUS_OK, FormatTestMesssage("PMC_Compare_X_Lの復帰コードが期待通りではない(%d)", result));

	lea	r8, QWORD PTR actual_z$[rbp]
	mov	rdx, QWORD PTR y$[rbp]
	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+280]
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	jne	SHORT $LN6@TEST_PMC_C
	mov	DWORD PTR tv92[rbp], 1
	jmp	SHORT $LN7@TEST_PMC_C
$LN6@TEST_PMC_C:
	mov	DWORD PTR tv92[rbp], 0
$LN7@TEST_PMC_C:
	mov	edx, DWORD PTR result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0DC@DELOMNHJ@PMC_Compare_X_L?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@
	call	FormatTestMesssage
	mov	QWORD PTR tv82[rbp], rax
	mov	r8d, 2
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@FHKCNDAI@PMC_Compare_X_L?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv92[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 59   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_I (%d.%d)", no, 3), actual_z == desired_z, "データの内容が一致しない");

	mov	eax, DWORD PTR desired_z$[rbp]
	cmp	DWORD PTR actual_z$[rbp], eax
	jne	SHORT $LN8@TEST_PMC_C
	mov	DWORD PTR tv134[rbp], 1
	jmp	SHORT $LN9@TEST_PMC_C
$LN8@TEST_PMC_C:
	mov	DWORD PTR tv134[rbp], 0
$LN9@TEST_PMC_C:
	mov	r8d, 3
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	lea	r9, OFFSET FLAT:??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@
	mov	r8d, DWORD PTR tv134[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 60   :     if (x_result == PMC_STATUS_OK)

	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN2@TEST_PMC_C

; 61   :         ep->PMC_Dispose(x);

	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+40]
$LN2@TEST_PMC_C:

; 62   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:TEST_PMC_Compare_X_L$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
TEST_PMC_Compare_X_L ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\test_op_compare.c
;	COMDAT TEST_PMC_Compare_X_I
_TEXT	SEGMENT
x$ = 8
actual_z$ = 36
result$ = 68
x_result$ = 100
tv134 = 308
tv92 = 308
tv74 = 308
tv82 = 312
tv64 = 312
env$ = 352
ep$ = 360
no$ = 368
x_buf$ = 376
x_buf_size$ = 384
y$ = 392
desired_z$ = 400
TEST_PMC_Compare_X_I PROC				; COMDAT

; 39   : {

$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__C615ED99_test_op_compare@c
	call	__CheckForDebuggerJustMyCode

; 40   :     HANDLE x;
; 41   :     int actual_z;
; 42   :     PMC_STATUS_CODE result;
; 43   :     PMC_STATUS_CODE x_result;
; 44   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_I (%d.%d)", no, 1), (x_result = ep->PMC_From_B(x_buf, x_buf_size, &x)) == PMC_STATUS_OK, FormatTestMesssage("PMC_From_Bの復帰コードが期待通りではない(%d)", x_result));

	lea	r8, QWORD PTR x$[rbp]
	mov	rdx, QWORD PTR x_buf_size$[rbp]
	mov	rcx, QWORD PTR x_buf$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+32]
	mov	DWORD PTR x_result$[rbp], eax
	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN4@TEST_PMC_C
	mov	DWORD PTR tv74[rbp], 1
	jmp	SHORT $LN5@TEST_PMC_C
$LN4@TEST_PMC_C:
	mov	DWORD PTR tv74[rbp], 0
$LN5@TEST_PMC_C:
	mov	edx, DWORD PTR x_result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@
	call	FormatTestMesssage
	mov	QWORD PTR tv64[rbp], rax
	mov	r8d, 1
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv64[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv74[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 45   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_I (%d.%d)", no, 2), (result = ep->PMC_Compare_X_I(x, y, &actual_z)) == PMC_STATUS_OK, FormatTestMesssage("PMC_Compare_X_Iの復帰コードが期待通りではない(%d)", result));

	lea	r8, QWORD PTR actual_z$[rbp]
	mov	edx, DWORD PTR y$[rbp]
	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+272]
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	jne	SHORT $LN6@TEST_PMC_C
	mov	DWORD PTR tv92[rbp], 1
	jmp	SHORT $LN7@TEST_PMC_C
$LN6@TEST_PMC_C:
	mov	DWORD PTR tv92[rbp], 0
$LN7@TEST_PMC_C:
	mov	edx, DWORD PTR result$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0DC@JJJOEBHL@PMC_Compare_X_I?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z@
	call	FormatTestMesssage
	mov	QWORD PTR tv82[rbp], rax
	mov	r8d, 2
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rcx, QWORD PTR tv82[rbp]
	mov	r9, rcx
	mov	r8d, DWORD PTR tv92[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 46   :     TEST_Assert(env, FormatTestLabel("PMC_Compare_X_I (%d.%d)", no, 3), actual_z == desired_z, "データの内容が一致しない");

	mov	eax, DWORD PTR desired_z$[rbp]
	cmp	DWORD PTR actual_z$[rbp], eax
	jne	SHORT $LN8@TEST_PMC_C
	mov	DWORD PTR tv134[rbp], 1
	jmp	SHORT $LN9@TEST_PMC_C
$LN8@TEST_PMC_C:
	mov	DWORD PTR tv134[rbp], 0
$LN9@TEST_PMC_C:
	mov	r8d, 3
	mov	edx, DWORD PTR no$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBILBIEM@PMC_Compare_X_I?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	lea	r9, OFFSET FLAT:??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@
	mov	r8d, DWORD PTR tv134[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Assert

; 47   :     if (x_result == PMC_STATUS_OK)

	cmp	DWORD PTR x_result$[rbp], 0
	jne	SHORT $LN2@TEST_PMC_C

; 48   :         ep->PMC_Dispose(x);

	mov	rcx, QWORD PTR x$[rbp]
	mov	rax, QWORD PTR ep$[rbp]
	call	QWORD PTR [rax+40]
$LN2@TEST_PMC_C:

; 49   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:TEST_PMC_Compare_X_I$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
TEST_PMC_Compare_X_I ENDP
_TEXT	ENDS
END
