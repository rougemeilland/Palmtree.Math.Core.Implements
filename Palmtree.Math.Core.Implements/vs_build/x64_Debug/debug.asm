; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	test_total_count
PUBLIC	test_ok_count
_BSS	SEGMENT
test_total_count DD 01H DUP (?)
test_ok_count DD 01H DUP (?)
_BSS	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__4522B509_pmc_internal@h DB 01H
__1C66ECB2_pmc_debug@h DB 01H
__24F5AC6E_debug@c DB 01H
msvcjmc	ENDS
PUBLIC	TEST_Assert
PUBLIC	FormatTestLabel
PUBLIC	FormatTestMesssage
PUBLIC	DoDebug
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0M@PNKFKHDK@?$IDe?$IDX?$IDg?$IKJ?$IOn?6@	; `string'
PUBLIC	??_C@_0EH@HCKELLNO@?$IDe?$IDX?$IDg?$IK?$KO?$JH?$LJ?$IBB?$IN?$IA?$JG?Z?$JA?$JE?$DN?$CFd?0?5OK?$IN?$IA?$JG?Z?$JA?$JE@ ; `string'
PUBLIC	??_C@_0BG@IPNJKFCN@PMC_Initialize?5failed@	; `string'
PUBLIC	??_C@_03OLPMMCEF@x64@				; `string'
PUBLIC	??_C@_03CGLCMCM@MSC@				; `string'
PUBLIC	??_C@_0O@LCBNABLP@PLATFORM?3?5?$CFs?6@		; `string'
PUBLIC	??_C@_0O@IPLJPJJI@COMPILER?3?5?$CFs?6@		; `string'
PUBLIC	??_C@_0DH@HKJFDFKO@CPU?9INFO?3?5POPCNT?$DN?$CFd?0?5ADX?$DN?$CFd?0?5BM@ ; `string'
PUBLIC	??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@	; `string'
PUBLIC	??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@ ; `string'
EXTRN	__imp_wsprintfA:PROC
EXTRN	PMC_Initialize:PROC
EXTRN	TEST_autogenerated:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
_BSS	SEGMENT
?buffer@?1??FormatTestLabel@@9@9 DB 0100H DUP (?)	; `FormatTestLabel'::`2'::buffer
?buffer@?1??FormatTestMesssage@@9@9 DB 0100H DUP (?)	; `FormatTestMesssage'::`2'::buffer
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_Assert DD imagerel $LN5
	DD	imagerel $LN5+170
	DD	imagerel $unwind$TEST_Assert
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$FormatTestLabel DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$FormatTestLabel
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$FormatTestMesssage DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$FormatTestMesssage
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_Start DD imagerel TEST_Start
	DD	imagerel TEST_Start+100
	DD	imagerel $unwind$TEST_Start
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_End DD imagerel TEST_End
	DD	imagerel TEST_End+174
	DD	imagerel $unwind$TEST_End
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DoTest DD imagerel DoTest
	DD	imagerel DoTest+112
	DD	imagerel $unwind$DoTest
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DoDebug DD imagerel $LN4
	DD	imagerel $LN4+311
	DD	imagerel $unwind$DoDebug
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@
CONST	SEGMENT
??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@ DB 083H
	DB	'e', 083H, 'X', 083H, 'g No.%d: %s => %s (%s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@
CONST	SEGMENT
??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@ DB '***NG***', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@HKJFDFKO@CPU?9INFO?3?5POPCNT?$DN?$CFd?0?5ADX?$DN?$CFd?0?5BM@
CONST	SEGMENT
??_C@_0DH@HKJFDFKO@CPU?9INFO?3?5POPCNT?$DN?$CFd?0?5ADX?$DN?$CFd?0?5BM@ DB 'C'
	DB	'PU-INFO: POPCNT=%d, ADX=%d, BMI1=%d, BMI2=%d, ABM=%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IPLJPJJI@COMPILER?3?5?$CFs?6@
CONST	SEGMENT
??_C@_0O@IPLJPJJI@COMPILER?3?5?$CFs?6@ DB 'COMPILER: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LCBNABLP@PLATFORM?3?5?$CFs?6@
CONST	SEGMENT
??_C@_0O@LCBNABLP@PLATFORM?3?5?$CFs?6@ DB 'PLATFORM: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03CGLCMCM@MSC@
CONST	SEGMENT
??_C@_03CGLCMCM@MSC@ DB 'MSC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OLPMMCEF@x64@
CONST	SEGMENT
??_C@_03OLPMMCEF@x64@ DB 'x64', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IPNJKFCN@PMC_Initialize?5failed@
CONST	SEGMENT
??_C@_0BG@IPNJKFCN@PMC_Initialize?5failed@ DB 'PMC_Initialize failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@HCKELLNO@?$IDe?$IDX?$IDg?$IK?$KO?$JH?$LJ?$IBB?$IN?$IA?$JG?Z?$JA?$JE?$DN?$CFd?0?5OK?$IN?$IA?$JG?Z?$JA?$JE@
CONST	SEGMENT
??_C@_0EH@HCKELLNO@?$IDe?$IDX?$IDg?$IK?$KO?$JH?$LJ?$IBB?$IN?$IA?$JG?Z?$JA?$JE?$DN?$CFd?0?5OK?$IN?$IA?$JG?Z?$JA?$JE@ DB 083H
	DB	'e', 083H, 'X', 083H, 'g', 08aH, 0aeH, 097H, 0b9H, 081H, 'B', 08dH
	DB	080H, 096H, 0daH, 090H, 094H, '=%d, OK', 08dH, 080H, 096H, 0daH
	DB	090H, 094H, '=%d, NG', 08dH, 080H, 096H, 0daH, 090H, 094H, '=%'
	DB	'd, OK', 097H, 0a6H, '=%d%%, NG', 097H, 0a6H, '=%d%%', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PNKFKHDK@?$IDe?$IDX?$IDg?$IKJ?$IOn?6@
CONST	SEGMENT
??_C@_0M@PNKFKHDK@?$IDe?$IDX?$IDg?$IKJ?$IOn?6@ DB 083H, 'e', 083H, 'X', 083H
	DB	'g', 08aH, 'J', 08eH, 'n', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DoDebug DD 035052a01H
	DD	010e3313H
	DD	07007002fH
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
DoDebug$rtcName$0 DB 063H
	DB	06fH
	DB	06eH
	DB	066H
	DB	00H
	ORG $+11
DoDebug$rtcVarDesc DD 034H
	DD	04H
	DQ	FLAT:DoDebug$rtcName$0
	ORG $+48
DoDebug$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:DoDebug$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DoTest DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_End DD 035052a01H
	DD	010e3313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_Start DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$FormatTestMesssage DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$FormatTestLabel DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_Assert DD 035053901H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT DoDebug
_TEXT	SEGMENT
conf$ = 4
ep$ = 40
platform$ = 72
compiler$ = 104
tv95 = 308
env$ = 352
DoDebug	PROC						; COMDAT

; 67   : {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__24F5AC6E_debug@c
	call	__CheckForDebuggerJustMyCode

; 68   : #ifdef _DEBUG
; 69   :     PMC_CONFIGURATION_INFO conf;
; 70   :     conf.MEMORY_VERIFICATION_ENABLED = FALSE;

	mov	eax, DWORD PTR conf$[rbp]
	and	eax, -2					; fffffffeH
	mov	DWORD PTR conf$[rbp], eax

; 71   :     PMC_ENTRY_POINTS* ep = PMC_Initialize(&conf);

	lea	rcx, QWORD PTR conf$[rbp]
	call	PMC_Initialize
	mov	QWORD PTR ep$[rbp], rax

; 72   :     if (ep == NULL)

	cmp	QWORD PTR ep$[rbp], 0
	jne	SHORT $LN2@DoDebug

; 73   :     {
; 74   :          env->log("PMC_Initialize failed");

	lea	rcx, OFFSET FLAT:??_C@_0BG@IPNJKFCN@PMC_Initialize?5failed@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 75   :          return;

	jmp	$LN1@DoDebug
$LN2@DoDebug:

; 76   :     }
; 77   : #ifdef _M_IX86
; 78   :     char* platform = "x86";
; 79   : #elif defined(_M_IX64)
; 80   :     char* platform = "x64";

	lea	rax, OFFSET FLAT:??_C@_03OLPMMCEF@x64@
	mov	QWORD PTR platform$[rbp], rax

; 81   : #else
; 82   : #error unknown platform
; 83   : #endif
; 84   : #ifdef _MSC_VER
; 85   :     char* compiler = "MSC";

	lea	rax, OFFSET FLAT:??_C@_03CGLCMCM@MSC@
	mov	QWORD PTR compiler$[rbp], rax

; 86   : #elif defined(__GNUC__)
; 87   :     char* compiler = "GNUC";
; 88   : #else
; 89   : #error unknown platform
; 90   : #endif
; 91   : 
; 92   :     env->log("PLATFORM: %s\n", platform);

	mov	rdx, QWORD PTR platform$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0O@LCBNABLP@PLATFORM?3?5?$CFs?6@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 93   :     env->log("COMPILER: %s\n", compiler);

	mov	rdx, QWORD PTR compiler$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0O@IPLJPJJI@COMPILER?3?5?$CFs?6@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 94   :     env->log("CPU-INFO: POPCNT=%d, ADX=%d, BMI1=%d, BMI2=%d, ABM=%d\n",

	mov	rax, QWORD PTR ep$[rbp]
	mov	eax, DWORD PTR [rax]
	shr	eax, 4
	and	eax, 1
	mov	rcx, QWORD PTR ep$[rbp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 3
	and	ecx, 1
	mov	rdx, QWORD PTR ep$[rbp]
	mov	edx, DWORD PTR [rdx]
	shr	edx, 2
	and	edx, 1
	mov	r8, QWORD PTR ep$[rbp]
	mov	r8d, DWORD PTR [r8]
	shr	r8d, 1
	and	r8d, 1
	mov	r9, QWORD PTR ep$[rbp]
	mov	r9d, DWORD PTR [r9]
	and	r9d, 1
	mov	DWORD PTR tv95[rbp], r9d
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], ecx
	mov	r9d, edx
	mov	eax, DWORD PTR tv95[rbp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0DH@HKJFDFKO@CPU?9INFO?3?5POPCNT?$DN?$CFd?0?5ADX?$DN?$CFd?0?5BM@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 95   :              ep->PROCESSOR_FEATURE_POPCNT,
; 96   :              ep->PROCESSOR_FEATURE_ADX,
; 97   :              ep->PROCESSOR_FEATURE_BMI1,
; 98   :              ep->PROCESSOR_FEATURE_BMI2,
; 99   :              ep->PROCESSOR_FEATURE_ABM);
; 100  : 
; 101  :     //CalculateCriticalDataOfDivision(env);
; 102  :     DoTest(env, ep);

	mov	rdx, QWORD PTR ep$[rbp]
	mov	rcx, QWORD PTR env$[rbp]
	call	DoTest
$LN1@DoDebug:

; 103  : #endif
; 104  : }

	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:DoDebug$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
DoDebug	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT DoTest
_TEXT	SEGMENT
env$ = 224
ep$ = 232
DoTest	PROC						; COMDAT

; 60   : {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__24F5AC6E_debug@c
	call	__CheckForDebuggerJustMyCode

; 61   :     TEST_Start(env);

	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_Start

; 62   :     TEST_autogenerated(env, ep);

	mov	rdx, QWORD PTR ep$[rbp]
	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_autogenerated

; 63   :     TEST_End(env);

	mov	rcx, QWORD PTR env$[rbp]
	call	TEST_End

; 64   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
DoTest	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT TEST_End
_TEXT	SEGMENT
tv68 = 192
env$ = 240
TEST_End PROC						; COMDAT

; 50   : {

	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__24F5AC6E_debug@c
	call	__CheckForDebuggerJustMyCode

; 51   :     env->log("テスト完了。項目数=%d, OK項目数=%d, NG項目数=%d, OK率=%d%%, NG率=%d%%\n",

	mov	eax, DWORD PTR test_ok_count
	mov	ecx, DWORD PTR test_total_count
	sub	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 100				; 00000064H
	cdq
	idiv	DWORD PTR test_total_count
	mov	DWORD PTR tv68[rbp], eax
	imul	ecx, DWORD PTR test_ok_count, 100	; 00000064H
	mov	eax, ecx
	cdq
	idiv	DWORD PTR test_total_count
	mov	ecx, DWORD PTR test_ok_count
	mov	edx, DWORD PTR test_total_count
	sub	edx, ecx
	mov	ecx, edx
	mov	edx, DWORD PTR tv68[rbp]
	mov	DWORD PTR [rsp+40], edx
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, ecx
	mov	r8d, DWORD PTR test_ok_count
	mov	edx, DWORD PTR test_total_count
	lea	rcx, OFFSET FLAT:??_C@_0EH@HCKELLNO@?$IDe?$IDX?$IDg?$IK?$KO?$JH?$LJ?$IBB?$IN?$IA?$JG?Z?$JA?$JE?$DN?$CFd?0?5OK?$IN?$IA?$JG?Z?$JA?$JE@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 52   :              test_total_count,
; 53   :              test_ok_count,
; 54   :              test_total_count - test_ok_count,
; 55   :              test_ok_count * 100 / test_total_count,
; 56   :              (test_total_count - test_ok_count) * 100 / test_total_count);
; 57   : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
TEST_End ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT TEST_Start
_TEXT	SEGMENT
env$ = 224
TEST_Start PROC						; COMDAT

; 43   : {

	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__24F5AC6E_debug@c
	call	__CheckForDebuggerJustMyCode

; 44   :     test_total_count = 0;

	mov	DWORD PTR test_total_count, 0

; 45   :     test_ok_count = 0;

	mov	DWORD PTR test_ok_count, 0

; 46   :     env->log("テスト開始\n");

	lea	rcx, OFFSET FLAT:??_C@_0M@PNKFKHDK@?$IDe?$IDX?$IDg?$IKJ?$IOn?6@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]

; 47   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
TEST_Start ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT FormatTestMesssage
_TEXT	SEGMENT
format$ = 224
return_value$ = 232
FormatTestMesssage PROC					; COMDAT

; 129  : {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__24F5AC6E_debug@c
	call	__CheckForDebuggerJustMyCode

; 130  :     static char buffer[256];
; 131  :     wsprintf(buffer, format, return_value);

	mov	r8d, DWORD PTR return_value$[rbp]
	mov	rdx, QWORD PTR format$[rbp]
	lea	rcx, OFFSET FLAT:?buffer@?1??FormatTestMesssage@@9@9
	call	QWORD PTR __imp_wsprintfA

; 132  :     return buffer;

	lea	rax, OFFSET FLAT:?buffer@?1??FormatTestMesssage@@9@9

; 133  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
FormatTestMesssage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT FormatTestLabel
_TEXT	SEGMENT
format$ = 224
n1$ = 232
n2$ = 240
FormatTestLabel PROC					; COMDAT

; 122  : {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__24F5AC6E_debug@c
	call	__CheckForDebuggerJustMyCode

; 123  :     static char buffer[256];
; 124  :     wsprintf(buffer, format, n1, n2);

	mov	r9d, DWORD PTR n2$[rbp]
	mov	r8d, DWORD PTR n1$[rbp]
	mov	rdx, QWORD PTR format$[rbp]
	lea	rcx, OFFSET FLAT:?buffer@?1??FormatTestLabel@@9@9
	call	QWORD PTR __imp_wsprintfA

; 125  :     return buffer;

	lea	rax, OFFSET FLAT:?buffer@?1??FormatTestLabel@@9@9

; 126  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
FormatTestLabel ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT TEST_Assert
_TEXT	SEGMENT
env$ = 224
test_name$ = 232
condition$ = 240
reason$ = 248
TEST_Assert PROC					; COMDAT

; 108  : {

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__24F5AC6E_debug@c
	call	__CheckForDebuggerJustMyCode

; 109  :     if (condition)

	cmp	DWORD PTR condition$[rbp], 0
	je	SHORT $LN2@TEST_Asser

; 110  :     {
; 111  :         //env->log("テスト No.%d: %s => %s\n", test_total_count + 1, test_name, "Ok");
; 112  :         ++test_ok_count;

	mov	eax, DWORD PTR test_ok_count
	inc	eax
	mov	DWORD PTR test_ok_count, eax

; 113  :     }

	jmp	SHORT $LN3@TEST_Asser
$LN2@TEST_Asser:

; 114  :     else
; 115  :     {
; 116  :         env->log("テスト No.%d: %s => %s (%s)\n", test_total_count + 1, test_name, "***NG***", reason);

	mov	eax, DWORD PTR test_total_count
	inc	eax
	mov	rcx, QWORD PTR reason$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@
	mov	r8, QWORD PTR test_name$[rbp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@
	mov	rax, QWORD PTR env$[rbp]
	call	QWORD PTR [rax]
$LN3@TEST_Asser:

; 117  :     }
; 118  :     ++test_total_count;

	mov	eax, DWORD PTR test_total_count
	inc	eax
	mov	DWORD PTR test_total_count, eax

; 119  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
TEST_Assert ENDP
_TEXT	ENDS
END
