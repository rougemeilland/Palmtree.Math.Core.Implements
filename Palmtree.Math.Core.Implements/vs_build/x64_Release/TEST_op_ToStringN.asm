; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	TEST_PMC_ToStringN
PUBLIC	??_C@_13KJIIAINM@?$AA?$CL@			; `string'
PUBLIC	??_C@_13IMODFHAA@?$AA?9@			; `string'
PUBLIC	??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@ ; `string'
PUBLIC	??_C@_0BG@FGBECKFO@PMC_ToStringN?5?$CI?$CFd?4?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0CP@LPHACLNN@PMC_ToString?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC@ ; `string'
PUBLIC	??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@ ; `string'
EXTRN	__imp_lstrcmpW:PROC
EXTRN	__imp_lstrcpyA:PROC
EXTRN	__imp_lstrcpyW:PROC
EXTRN	TEST_Assert:PROC
EXTRN	FormatTestLabel:PROC
EXTRN	FormatTestMesssage:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?actual_str_buffer@?1??TEST_PMC_ToStringN@@9@9 DW 01000H DUP (?) ; `TEST_PMC_ToStringN'::`2'::actual_str_buffer
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$TEST_PMC_ToStringN DD imagerel $LN5
	DD	imagerel $LN5+486
	DD	imagerel $unwind$TEST_PMC_ToStringN
pdata	ENDS
;	COMDAT ??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@
CONST	SEGMENT
??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@ DB 083H
	DB	'f', 081H, '[', 083H, '^', 082H, 0ccH, 093H, 0e0H, 097H, 'e', 082H
	DB	0aaH, 088H, 0eaH, 092H, 'v', 082H, 0b5H, 082H, 0c8H, 082H, 0a2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LPHACLNN@PMC_ToString?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC@
CONST	SEGMENT
??_C@_0CP@LPHACLNN@PMC_ToString?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC@ DB 'P'
	DB	'MC_ToString', 082H, 0ccH, 095H, 09cH, 08bH, 'A', 083H, 'R', 081H
	DB	'[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H, 092H, 0caH
	DB	082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H, 0a2H, '('
	DB	'%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FGBECKFO@PMC_ToStringN?5?$CI?$CFd?4?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BG@FGBECKFO@PMC_ToStringN?5?$CI?$CFd?4?$CFd?$CJ@ DB 'PMC_ToStringN'
	DB	' (%d.%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@
CONST	SEGMENT
??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@ DB 'P'
	DB	'MC_From_B', 082H, 0ccH, 095H, 09cH, 08bH, 'A', 083H, 'R', 081H
	DB	'[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H, 092H, 0caH
	DB	082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H, 0a2H, '('
	DB	'%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13IMODFHAA@?$AA?9@
CONST	SEGMENT
??_C@_13IMODFHAA@?$AA?9@ DB '-', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13KJIIAINM@?$AA?$CL@
CONST	SEGMENT
??_C@_13KJIIAINM@?$AA?$CL@ DB '+', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$TEST_PMC_ToStringN DD 092019H
	DD	0f00de211H
	DD	0d009e00bH
	DD	07005c007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\test_op_tostringn.c
;	COMDAT TEST_PMC_ToStringN
_TEXT	SEGMENT
x$ = 48
ep$GSCopy$1$ = 56
opt$ = 64
__$ArrayPad$ = 104
env$ = 192
ep$ = 200
no$ = 208
buf$ = 216
buf_size$ = 224
format_spec$ = 232
width$ = 240
group_separator$ = 248
group_sizes$ = 256
decimal_separator$ = 264
decimal_digits$ = 272
desired_str$ = 280
TEST_PMC_ToStringN PROC					; COMDAT

; 39   : {

$LN5:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, QWORD PTR group_sizes$[rsp]
	mov	rbp, rdx
	mov	rdi, QWORD PTR decimal_separator$[rsp]
	mov	r13, rcx
	mov	r15, QWORD PTR desired_str$[rsp]

; 40   :     HANDLE x;
; 41   :     static wchar_t actual_str_buffer[4096];
; 42   :     PMC_STATUS_CODE result;
; 43   :     PMC_STATUS_CODE x_result;
; 44   :     PMC_NUMBER_FORMAT_OPTION opt;
; 45   :     lstrcpyW(opt.GroupSeparator, group_separator);

	lea	rcx, QWORD PTR opt$[rsp+4]
	mov	QWORD PTR ep$GSCopy$1$[rsp], rdx
	mov	rsi, r9
	mov	rdx, QWORD PTR group_separator$[rsp]
	mov	r12d, r8d
	call	QWORD PTR __imp_lstrcpyW

; 46   :     lstrcpy(opt.GroupSizes, group_sizes);

	mov	rdx, rbx
	lea	rcx, QWORD PTR opt$[rsp+28]
	call	QWORD PTR __imp_lstrcpyA

; 47   :     lstrcpyW(opt.DecimalSeparator, decimal_separator);

	mov	rdx, rdi
	lea	rcx, QWORD PTR opt$[rsp+10]
	call	QWORD PTR __imp_lstrcpyW

; 48   :     opt.DecimalDigits = decimal_digits;

	mov	eax, DWORD PTR decimal_digits$[rsp]

; 49   :     lstrcpyW(opt.PositiveSign, L"+");

	lea	rdx, OFFSET FLAT:??_C@_13KJIIAINM@?$AA?$CL@
	lea	rcx, QWORD PTR opt$[rsp+16]
	mov	DWORD PTR opt$[rsp], eax
	call	QWORD PTR __imp_lstrcpyW

; 50   :     lstrcpyW(opt.NegativeSign, L"-");

	lea	rdx, OFFSET FLAT:??_C@_13IMODFHAA@?$AA?9@
	lea	rcx, QWORD PTR opt$[rsp+22]
	call	QWORD PTR __imp_lstrcpyW

; 51   :     TEST_Assert(env, FormatTestLabel("PMC_ToStringN (%d.%d)", no, 1), (x_result = ep->PMC_From_B(buf, buf_size, &x)) == PMC_STATUS_OK, FormatTestMesssage("PMC_From_Bの復帰コードが期待通りではない(%d)", x_result));

	mov	rdx, QWORD PTR buf_size$[rsp]
	lea	r8, QWORD PTR x$[rsp]
	mov	rcx, rsi
	call	QWORD PTR [rbp+32]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0CN@LDAEIIBE@PMC_From_B?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC?J?$IC@
	mov	r14d, eax
	call	FormatTestMesssage
	xor	ebp, ebp
	lea	rcx, OFFSET FLAT:??_C@_0BG@FGBECKFO@PMC_ToStringN?5?$CI?$CFd?4?$CFd?$CJ@
	test	r14d, r14d
	mov	ebx, ebp
	mov	edx, r12d
	mov	rdi, rax
	sete	bl
	lea	r8d, QWORD PTR [rbp+1]
	call	FormatTestLabel
	mov	rdx, rax
	mov	r9, rdi
	mov	r8d, ebx
	mov	rcx, r13
	call	TEST_Assert

; 52   :     TEST_Assert(env, FormatTestLabel("PMC_ToStringN (%d.%d)", no, 2), (result = ep->PMC_ToString(x, actual_str_buffer, sizeof(actual_str_buffer), format_spec, width, &opt)) == PMC_STATUS_OK, FormatTestMesssage("PMC_ToStringの復帰コードが期待通りではない(%d)", result));

	movzx	r9d, BYTE PTR format_spec$[rsp]
	lea	rax, QWORD PTR opt$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	lea	rdx, OFFSET FLAT:?actual_str_buffer@?1??TEST_PMC_ToStringN@@9@9
	mov	QWORD PTR [rsp+40], rax
	mov	r8d, 8192				; 00002000H
	mov	eax, DWORD PTR width$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR ep$GSCopy$1$[rsp]
	call	QWORD PTR [rax+320]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0CP@LPHACLNN@PMC_ToString?$IC?L?$JF?$JM?$ILA?$IDR?$IB?$FL?$IDh?$IC?$KK?$IK?z?$JB?R?$JC@
	mov	ebx, eax
	call	FormatTestMesssage
	test	ebx, ebx
	lea	r8d, QWORD PTR [rbp+2]
	mov	esi, ebp
	lea	rcx, OFFSET FLAT:??_C@_0BG@FGBECKFO@PMC_ToStringN?5?$CI?$CFd?4?$CFd?$CJ@
	mov	edx, r12d
	sete	sil
	mov	rdi, rax
	call	FormatTestLabel
	mov	rdx, rax
	mov	r9, rdi
	mov	r8d, esi
	mov	rcx, r13
	call	TEST_Assert

; 53   :     TEST_Assert(env, FormatTestLabel("PMC_ToStringN (%d.%d)", no, 3), lstrcmpW(actual_str_buffer, desired_str) == 0, "データの内容が一致しない");

	mov	rdx, r15
	lea	rcx, OFFSET FLAT:?actual_str_buffer@?1??TEST_PMC_ToStringN@@9@9
	call	QWORD PTR __imp_lstrcmpW
	mov	r8d, 3
	mov	edx, r12d
	test	eax, eax
	sete	bpl
	lea	rcx, OFFSET FLAT:??_C@_0BG@FGBECKFO@PMC_ToStringN?5?$CI?$CFd?4?$CFd?$CJ@
	call	FormatTestLabel
	mov	rdx, rax
	lea	r9, OFFSET FLAT:??_C@_0BJ@JGINKGIA@?$IDf?$IB?$FL?$ID?$FO?$IC?L?$JD?$OA?$JHe?$IC?$KK?$II?j?$JCv?$IC?$LF?$IC?H?$IC?$KC@
	mov	r8d, ebp
	mov	rcx, r13
	call	TEST_Assert

; 54   :     if (x_result == PMC_STATUS_OK)

	test	r14d, r14d
	jne	SHORT $LN2@TEST_PMC_T

; 55   :         ep->PMC_Dispose(x);

	mov	rax, QWORD PTR ep$GSCopy$1$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	call	QWORD PTR [rax+40]
$LN2@TEST_PMC_T:

; 56   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
TEST_PMC_ToStringN ENDP
_TEXT	ENDS
END
