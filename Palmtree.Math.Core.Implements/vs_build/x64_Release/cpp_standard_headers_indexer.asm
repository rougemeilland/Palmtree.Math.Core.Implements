; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_Maklocwcs@std@@YAPEA_WPEB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
EXTRN	__imp_calloc:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	_Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memcpy:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN4
	DD	imagerel $LN4+26
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN28
	DD	imagerel $LN28+258
	DD	imagerel $unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD imagerel $LN10
	DD	imagerel $LN10+107
	DD	imagerel $unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN20
	DD	imagerel $LN20+208
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN14
	DD	imagerel $LN14+208
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN15
	DD	imagerel $LN15+116
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 041919H
	DD	0f340aH
	DD	07006b20aH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 041919H
	DD	0f340aH
	DD	07006b20aH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD 0a1601H
	DD	0105416H
	DD	0f3416H
	DD	0f0127216H
	DD	0c00ee010H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 020601H
	DD	030023206H
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Ptr$ = 48
__formal$ = 56
__formal$ = 64
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

	mov	rbx, -1
$LL11@Maklocstr:
	inc	rbx
	cmp	BYTE PTR [rcx+rbx], 0
	jne	SHORT $LL11@Maklocstr
	inc	rbx

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

	mov	edx, 1
	mov	rcx, rbx
	call	QWORD PTR __imp_calloc
	mov	rdx, rax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

	test	rax, rax
	je	SHORT $LN14@Maklocstr

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

	test	rbx, rbx
	je	SHORT $LN3@Maklocstr
	mov	rcx, rax
	sub	rcx, rdi
	npad	15
$LL4@Maklocstr:

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

	movzx	eax, BYTE PTR [rdi]
	mov	BYTE PTR [rcx+rdi], al
	lea	rdi, QWORD PTR [rdi+1]
	sub	rbx, 1
	jne	SHORT $LL4@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);
; 677  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdx
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN14@Maklocstr:

; 671  : 		_Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN12@Maklocstr:
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 80
this$ = 112
__formal$ = 120
_Lobj$ = 128
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT

; 216  : 		{	// get values

$LN14:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx

; 217  : 		_Cvt = _Lobj._Getcvt();

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r8
	mov	rbx, r8
	call	QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)
; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

	mov	rcx, rbx
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdi+44], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rdi+60], xmm1
	movsd	xmm0, QWORD PTR [rax+32]
	movsd	QWORD PTR [rdi+76], xmm0
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR [rdi+84], eax
	call	QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

	mov	rcx, rbx
	mov	QWORD PTR [rdi+16], rax
	call	QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

	mov	edx, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

	mov	QWORD PTR [rdi+24], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

	lea	ecx, QWORD PTR [rdx+11]
	call	QWORD PTR __imp_calloc
	mov	rcx, rax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

	test	rax, rax
	je	SHORT $LN13@Getvals
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h

; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	movups	xmm0, XMMWORD PTR ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	movups	XMMWORD PTR [rax], xmm0
	movsd	xmm1, QWORD PTR ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@+16
	movsd	QWORD PTR [rax+16], xmm1
	movzx	eax, WORD PTR ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@+24
	mov	WORD PTR [rcx+24], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

	mov	QWORD PTR [rdi+32], rcx

; 231  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
$LN13@Getvals:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 104  : 		_Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN11@Getvals:
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 80
this$ = 112
__formal$ = 120
_Lobj$ = 128
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT

; 216  : 		{	// get values

$LN20:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx

; 217  : 		_Cvt = _Lobj._Getcvt();

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r8
	mov	rbx, r8
	call	QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)
; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

	mov	rcx, rbx
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR [rdi+44], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR [rdi+60], xmm1
	movsd	xmm0, QWORD PTR [rax+32]
	movsd	QWORD PTR [rdi+76], xmm0
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR [rdi+84], eax
	call	QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

	mov	rcx, rbx
	mov	QWORD PTR [rdi+16], rax
	call	QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

	mov	edx, 2
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

	mov	QWORD PTR [rdi+24], rax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

	lea	ecx, QWORD PTR [rdx+11]
	call	QWORD PTR __imp_calloc
	mov	rcx, rax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

	test	rax, rax
	je	SHORT $LN19@Getvals
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h

; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	movups	xmm0, XMMWORD PTR ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	movups	XMMWORD PTR [rax], xmm0
	movsd	xmm1, QWORD PTR ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@+16
	movsd	QWORD PTR [rax+16], xmm1
	movzx	eax, WORD PTR ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@+24
	mov	WORD PTR [rcx+24], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

	mov	QWORD PTR [rdi+32], rcx

; 231  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
$LN19@Getvals:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 104  : 		_Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN17@Getvals:
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
_TEXT	SEGMENT
_Ptr$ = 48
?_Maklocwcs@std@@YAPEA_WPEB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

	mov	rbx, -1
	npad	7
$LL6@Maklocwcs:
	inc	rbx
	cmp	WORD PTR [rcx+rbx*2], 0
	jne	SHORT $LL6@Maklocwcs
	inc	rbx

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

	mov	edx, 2
	mov	rcx, rbx
	call	QWORD PTR __imp_calloc
	mov	rsi, rax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

	test	rax, rax
	je	SHORT $LN9@Maklocwcs
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h

; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	lea	r8, QWORD PTR [rbx+rbx]
	mov	rdx, rdi
	mov	rcx, rax
	call	memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 107  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN9@Maklocwcs:

; 104  : 		_Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN7@Maklocwcs:
?_Maklocwcs@std@@YAPEA_WPEB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Mbst2$ = 48
_Wc$ = 112
_Ptr$ = 112
__formal$ = 120
_Cvt$ = 128
_Mbst1$ = 136
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z PROC ; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

$LN28:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

	xor	r12d, r12d
	mov	r15, r8
	mov	QWORD PTR _Mbst1$[rsp], r12
	mov	rsi, rcx

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

	mov	rdi, -1
	npad	2
$LL22@Maklocstr:
	inc	rdi
	cmp	BYTE PTR [rcx+rdi], r12b
	jne	SHORT $LL22@Maklocstr
	add	rdi, 1

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

	mov	rbx, r12
	mov	rbp, rdi
	mov	r14, rcx
	je	SHORT $LN23@Maklocstr
	npad	8
$LL4@Maklocstr:

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

	lea	r9, QWORD PTR _Mbst1$[rsp]
	mov	QWORD PTR [rsp+32], r15
	mov	r8, rbp
	lea	rcx, QWORD PTR _Wc$[rsp]
	mov	rdx, r14
	call	_Mbrtowc
	test	eax, eax
	jle	SHORT $LN23@Maklocstr

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

	cdqe
	inc	rbx
	add	r14, rax
	sub	rbp, rax
	jne	SHORT $LL4@Maklocstr
$LN23@Maklocstr:

; 694  : 			break;
; 695  : 	++_Wchars;	// count terminating nul

	inc	rbx

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

	mov	edx, 2
	mov	rcx, rbx
	call	QWORD PTR __imp_calloc
	mov	rbp, rax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

	test	rax, rax
	je	SHORT $LN27@Maklocstr

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;
; 703  : 	mbstate_t _Mbst2 = {};

	mov	QWORD PTR _Mbst2$[rsp], r12
	mov	r14, rax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

	test	rbx, rbx
	je	SHORT $LN24@Maklocstr
	npad	12
$LL7@Maklocstr:

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

	lea	r9, QWORD PTR _Mbst2$[rsp]
	mov	QWORD PTR [rsp+32], r15
	mov	r8, rdi
	mov	rdx, rsi
	mov	rcx, r14
	call	_Mbrtowc
	test	eax, eax
	jle	SHORT $LN24@Maklocstr

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

	cdqe
	add	r14, 2
	add	rsi, rax
	sub	rbx, 1
	jne	SHORT $LL7@Maklocstr
$LN24@Maklocstr:

; 708  : 			break;
; 709  : 	*_Ptrnext = L'\0';
; 710  : 
; 711  : 	return (_Ptrdest);
; 712  : 	}

	mov	rbx, QWORD PTR [rsp+120]
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+128]
	mov	WORD PTR [r14], r12w
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN27@Maklocstr:

; 701  : 		_Xbad_alloc();

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
	int	3
$LN25@Maklocstr:
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ENDP ; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemcpy	PROC						; COMDAT

; 230  :     {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	add	r8, r8
	mov	rbx, rcx
	call	memcpy
	mov	rax, rbx

; 234  :         #pragma warning(pop)
; 235  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
wmemcpy	ENDP
_TEXT	ENDS
END
