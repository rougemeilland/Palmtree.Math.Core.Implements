; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	GetCPUInfo
;	COMDAT pdata
pdata	SEGMENT
$pdata$GetCPUInfo DD imagerel $LN23
	DD	imagerel $LN23+162
	DD	imagerel $unwind$GetCPUInfo
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_ZERO_MEMORY_BYTE DD imagerel _ZERO_MEMORY_BYTE
	DD	imagerel _ZERO_MEMORY_BYTE+21
	DD	imagerel $unwind$_ZERO_MEMORY_BYTE
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cpuid DD	imagerel cpuid
	DD	imagerel cpuid+36
	DD	imagerel $unwind$cpuid
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cpuidex DD imagerel cpuidex
	DD	imagerel cpuidex+37
	DD	imagerel $unwind$cpuidex
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cpuidex DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cpuid DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_ZERO_MEMORY_BYTE DD 020501H
	DD	017405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$GetCPUInfo DD 040a01H
	DD	04340aH
	DD	07006120aH
xdata	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\cpuid.c
;	COMDAT cpuidex
_TEXT	SEGMENT
op$ = 8
subop$ = 16
reg_eax$ = 24
reg_ebx$ = 32
reg_ecx$ = 40
reg_edx$ = 48
cpuidex	PROC						; COMDAT

; 49   : {

	mov	QWORD PTR [rsp+8], rbx

; 50   :     _UINT32_T regbuf[4];
; 51   :     __cpuidex(regbuf, op, subop);

	mov	eax, ecx
	mov	ecx, edx
	cpuid

; 52   :     *reg_eax = regbuf[0];

	mov	DWORD PTR [r8], eax

; 53   :     *reg_ebx = regbuf[1];
; 54   :     *reg_ecx = regbuf[2];

	mov	rax, QWORD PTR reg_ecx$[rsp]
	mov	DWORD PTR [r9], ebx

; 55   :     *reg_edx = regbuf[3];
; 56   : }

	mov	rbx, QWORD PTR [rsp+8]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR reg_edx$[rsp]
	mov	DWORD PTR [rax], edx
	ret	0
cpuidex	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\cpuid.c
;	COMDAT cpuid
_TEXT	SEGMENT
op$ = 8
reg_eax$ = 16
reg_ebx$ = 24
reg_ecx$ = 32
reg_edx$ = 40
cpuid	PROC						; COMDAT

; 39   : {

	mov	QWORD PTR [rsp+8], rbx

; 40   :     _UINT32_T regbuf[4];
; 41   :     __cpuid(regbuf, op);

	mov	eax, ecx
	mov	r10, rdx
	xor	ecx, ecx
	cpuid

; 42   :     *reg_eax = regbuf[0];

	mov	DWORD PTR [r10], eax

; 43   :     *reg_ebx = regbuf[1];
; 44   :     *reg_ecx = regbuf[2];
; 45   :     *reg_edx = regbuf[3];

	mov	rax, QWORD PTR reg_edx$[rsp]
	mov	DWORD PTR [r8], ebx

; 46   : }

	mov	rbx, QWORD PTR [rsp+8]
	mov	DWORD PTR [r9], ecx
	mov	DWORD PTR [rax], edx
	ret	0
cpuid	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\pmc_internal.h
;	COMDAT _ZERO_MEMORY_BYTE
_TEXT	SEGMENT
d$ = 8
count$ = 16
_ZERO_MEMORY_BYTE PROC					; COMDAT

; 370  : {

	mov	QWORD PTR [rsp+8], rdi

; 371  :     __stosb(d, 0, count);

	mov	rdi, rcx
	xor	eax, eax
	mov	rcx, rdx
	rep stosb

; 372  : }

	mov	rdi, QWORD PTR [rsp+8]
	ret	0
_ZERO_MEMORY_BYTE ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\cpuid.c
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\pmc_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\cpuid.c
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\pmc_internal.h
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\cpuid.c
;	COMDAT GetCPUInfo
_TEXT	SEGMENT
feature$ = 32
GetCPUInfo PROC						; COMDAT

; 59   : {

$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 16
	mov	r8, rcx

; 41   :     __cpuid(regbuf, op);

	xor	eax, eax
	xor	ecx, ecx
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\pmc_internal.h

; 371  :     __stosb(d, 0, count);

	mov	rdi, r8
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\cpuid.c

; 41   :     __cpuid(regbuf, op);

	cpuid
	mov	r9d, eax
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\pmc_internal.h

; 371  :     __stosb(d, 0, count);

	mov	ecx, 4
	xor	eax, eax
	rep stosb
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\cpuid.c

; 70   :     if (max_function_no >= 1)

	cmp	r9d, 1
	jb	SHORT $LN20@GetCPUInfo

; 71   :     {
; 72   :         cpuid(1, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 73   :         feature->PROCESSOR_FEATURE_POPCNT = (reg_ecx >> 23) & 1;

	and	DWORD PTR [r8], -2			; fffffffeH

; 41   :     __cpuid(regbuf, op);

	xor	ecx, ecx
	mov	eax, 1
	cpuid

; 71   :     {
; 72   :         cpuid(1, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 73   :         feature->PROCESSOR_FEATURE_POPCNT = (reg_ecx >> 23) & 1;

	shr	ecx, 23
	and	ecx, 1
	or	DWORD PTR [r8], ecx
$LN20@GetCPUInfo:

; 74   :     }
; 75   :     if (max_function_no >= 7)

	cmp	r9d, 7
	jb	SHORT $LN21@GetCPUInfo

; 76   :     {
; 77   :         cpuidex(7, 0, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 78   :         max_subleaf_no = reg_eax;
; 79   :         feature->PROCESSOR_FEATURE_BMI1 = (reg_ebx >> 3) & 1;
; 80   :         feature->PROCESSOR_FEATURE_ADX = (reg_ebx >> 8) & 1;
; 81   :         feature->PROCESSOR_FEATURE_BMI2 = (reg_ebx >> 19) & 1;

	and	DWORD PTR [r8], -15			; fffffff1H

; 51   :     __cpuidex(regbuf, op, subop);

	xor	ecx, ecx
	mov	eax, 7
	cpuid

; 76   :     {
; 77   :         cpuidex(7, 0, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 78   :         max_subleaf_no = reg_eax;
; 79   :         feature->PROCESSOR_FEATURE_BMI1 = (reg_ebx >> 3) & 1;
; 80   :         feature->PROCESSOR_FEATURE_ADX = (reg_ebx >> 8) & 1;
; 81   :         feature->PROCESSOR_FEATURE_BMI2 = (reg_ebx >> 19) & 1;

	mov	ecx, ebx
	mov	eax, ebx
	shr	ecx, 9
	and	eax, 256				; 00000100H
	and	ecx, 1024				; 00000400H
	and	ebx, 8
	or	ecx, eax
	shr	ecx, 6
	or	ecx, ebx
	shr	ecx, 1
	or	DWORD PTR [r8], ecx
$LN21@GetCPUInfo:

; 41   :     __cpuid(regbuf, op);

	xor	ecx, ecx
	mov	eax, -2147483648			; ffffffff80000000H
	cpuid

; 82   :     }
; 83   :     cpuid(0x80000000, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 84   :     max_ex_function_no = reg_eax;
; 85   :     if (max_ex_function_no >= 0x80000001)

	cmp	eax, -2147483647			; 80000001H
	jb	SHORT $LN4@GetCPUInfo

; 86   :     {
; 87   :         cpuid(0x80000001, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 88   :         feature->PROCESSOR_FEATURE_ABM = (reg_ecx >> 5) & 1;

	and	DWORD PTR [r8], -17			; ffffffefH

; 41   :     __cpuid(regbuf, op);

	xor	ecx, ecx
	mov	eax, -2147483647			; ffffffff80000001H
	cpuid

; 86   :     {
; 87   :         cpuid(0x80000001, &reg_eax, &reg_ebx, &reg_ecx, &reg_edx);
; 88   :         feature->PROCESSOR_FEATURE_ABM = (reg_ecx >> 5) & 1;

	shr	ecx, 1
	and	ecx, 16
	or	DWORD PTR [r8], ecx
$LN4@GetCPUInfo:

; 89   :     }
; 90   : }

	mov	rbx, QWORD PTR [rsp+32]
	add	rsp, 16
	pop	rdi
	ret	0
GetCPUInfo ENDP
_TEXT	ENDS
END
