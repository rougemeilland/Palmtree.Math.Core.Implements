; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Implements\Palmtree.Math.Core.Implements\TEST_op_GetPropertyValue.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__1C66ECB2_pmc_debug@h DB 01H
__0DE958E3_test_op_getpropertyvalue@c DB 01H
msvcjmc	ENDS
PUBLIC	_TEST_PMC_GetPropertyValue_X_I
PUBLIC	__JustMyCode_Default
EXTRN	_TEST_Assert:PROC
EXTRN	_FormatTestLabel:PROC
EXTRN	_FormatTestMesssage:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
_DATA	SEGMENT
$SG94528 DB	'PMC_FromByteArray', 082H, 0ccH, 095H, 09cH, 08bH, 'A', 083H
	DB	'R', 081H, '[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H, 092H
	DB	0caH, 082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H, 0a2H
	DB	'(%d)', 00H
$SG94529 DB	'PMC_GetPropertyValue_X_I (%d.%d)', 00H
	ORG $+3
$SG94530 DB	'PMC_GetPropertyValue_X_I', 082H, 0ccH, 095H, 09cH, 08bH, 'A'
	DB	083H, 'R', 081H, '[', 083H, 'h', 082H, 0aaH, 08aH, 0faH, 091H, 0d2H
	DB	092H, 0caH, 082H, 0e8H, 082H, 0c5H, 082H, 0cdH, 082H, 0c8H, 082H
	DB	0a2H, '(%d)', 00H
	ORG $+1
$SG94531 DB	'PMC_GetPropertyValue_X_I (%d.%d)', 00H
	ORG $+3
$SG94532 DB	083H, 'f', 081H, '[', 083H, '^', 082H, 0ccH, 093H, 0e0H, 097H
	DB	'e', 082H, 0aaH, 088H, 0eaH, 092H, 'v', 082H, 0b5H, 082H, 0c8H
	DB	082H, 0a2H, 00H
	ORG $+3
$SG94533 DB	'PMC_GetPropertyValue_X_I (%d.%d)', 00H
_DATA	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\test_op_getpropertyvalue.c
_TEXT	SEGMENT
tv134 = -44						; size = 4
tv92 = -40						; size = 4
tv74 = -36						; size = 4
_x_result$ = -32					; size = 4
_result$ = -28						; size = 4
_actual_value$ = -20					; size = 4
_x$ = -8						; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_x_buf$ = 20						; size = 4
_x_buf_size$ = 24					; size = 4
_function_code$ = 28					; size = 4
_desired_value$ = 32					; size = 4
_TEST_PMC_GetPropertyValue_X_I PROC

; 40   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __0DE958E3_test_op_getpropertyvalue@c
	call	@__CheckForDebuggerJustMyCode@4

; 41   :     HANDLE x;
; 42   :     _INT32_T actual_value;
; 43   :     PMC_STATUS_CODE result;
; 44   :     PMC_STATUS_CODE x_result;
; 45   :     TEST_Assert(env, FormatTestLabel("PMC_GetPropertyValue_X_I (%d.%d)", no, 1), (x_result = ep->PMC_FromByteArray(x_buf, x_buf_size, &x)) == PMC_STATUS_OK, FormatTestMesssage("PMC_FromByteArrayの復帰コードが期待通りではない(%d)", x_result));

	mov	esi, esp
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _x_result$[ebp], eax
	cmp	DWORD PTR _x_result$[ebp], 0
	jne	SHORT $LN4@TEST_PMC_G
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN5@TEST_PMC_G
$LN4@TEST_PMC_G:
	mov	DWORD PTR tv74[ebp], 0
$LN5@TEST_PMC_G:
	mov	edx, DWORD PTR _x_result$[ebp]
	push	edx
	push	OFFSET $SG94528
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET $SG94529
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 46   :     TEST_Assert(env, FormatTestLabel("PMC_GetPropertyValue_X_I (%d.%d)", no, 2), (result = ep->PMC_GetPropertyValue_X_I(x, function_code, &actual_value)) == PMC_STATUS_OK, FormatTestMesssage("PMC_GetPropertyValue_X_Iの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _function_code$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN6@TEST_PMC_G
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN7@TEST_PMC_G
$LN6@TEST_PMC_G:
	mov	DWORD PTR tv92[ebp], 0
$LN7@TEST_PMC_G:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET $SG94530
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET $SG94531
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 47   :     TEST_Assert(env, FormatTestLabel("PMC_GetPropertyValue_X_I (%d.%d)", no, 3), actual_value == desired_value, "データの内容が一致しない");

	mov	eax, DWORD PTR _actual_value$[ebp]
	cmp	eax, DWORD PTR _desired_value$[ebp]
	jne	SHORT $LN8@TEST_PMC_G
	mov	DWORD PTR tv134[ebp], 1
	jmp	SHORT $LN9@TEST_PMC_G
$LN8@TEST_PMC_G:
	mov	DWORD PTR tv134[ebp], 0
$LN9@TEST_PMC_G:
	push	OFFSET $SG94532
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET $SG94533
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 48   :     if (x_result == PMC_STATUS_OK)

	cmp	DWORD PTR _x_result$[ebp], 0
	jne	SHORT $LN1@TEST_PMC_G

; 49   :         ep->PMC_Dispose(x);

	mov	esi, esp
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ep$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_PMC_G:

; 50   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@TEST_PMC_G
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@TEST_PMC_G:
	DD	2
	DD	$LN12@TEST_PMC_G
$LN12@TEST_PMC_G:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN10@TEST_PMC_G
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@TEST_PMC_G
$LN11@TEST_PMC_G:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN10@TEST_PMC_G:
	DB	120					; 00000078H
	DB	0
_TEST_PMC_GetPropertyValue_X_I ENDP
_TEXT	ENDS
END
