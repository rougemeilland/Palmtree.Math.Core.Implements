; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Implements\Palmtree.Math.Core.Implements\debug.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_test_total_count
PUBLIC	_test_ok_count
_BSS	SEGMENT
_test_total_count DD 01H DUP (?)
_test_ok_count DD 01H DUP (?)
_BSS	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__4522B509_pmc_internal@h DB 01H
__1C66ECB2_pmc_debug@h DB 01H
__24F5AC6E_debug@c DB 01H
msvcjmc	ENDS
PUBLIC	_TEST_Assert
PUBLIC	_FormatTestLabel
PUBLIC	_FormatTestMesssage
PUBLIC	_DoDebug@4
PUBLIC	__JustMyCode_Default
EXTRN	__imp__wsprintfA:PROC
EXTRN	_PMC_Initialize@4:PROC
EXTRN	_TEST_autogenerated:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
_BSS	SEGMENT
?buffer@?1??FormatTestLabel@@9@9 DB 0100H DUP (?)	; `FormatTestLabel'::`2'::buffer
?buffer@?1??FormatTestMesssage@@9@9 DB 0100H DUP (?)	; `FormatTestMesssage'::`2'::buffer
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
_DATA	SEGMENT
$SG95456 DB	083H, 'e', 083H, 'X', 083H, 'g', 08aH, 'J', 08eH, 'n', 0aH
	DB	00H
$SG95479 DB	'x86', 00H
$SG95461 DB	083H, 'e', 083H, 'X', 083H, 'g', 08aH, 0aeH, 097H, 0b9H, 081H
	DB	'B', 08dH, 080H, 096H, 0daH, 090H, 094H, '=%d, OK', 08dH, 080H
	DB	096H, 0daH, 090H, 094H, '=%d, NG', 08dH, 080H, 096H, 0daH, 090H
	DB	094H, '=%d, OK', 097H, 0a6H, '=%d%%, NG', 097H, 0a6H, '=%d%%', 0aH
	DB	00H
	ORG $+1
$SG95478 DB	'PMC_Initialize failed', 00H
	ORG $+2
$SG95480 DB	'MSC', 00H
$SG95481 DB	'PLATFORM: %s', 0aH, 00H
	ORG $+2
$SG95482 DB	'COMPILER: %s', 0aH, 00H
	ORG $+2
$SG95483 DB	'CPU-INFO: POPCNT=%d, ADX=%d, BMI1=%d, BMI2=%d, ABM=%d', 0aH
	DB	00H
	ORG $+1
$SG95495 DB	'***NG***', 00H
	ORG $+3
$SG95496 DB	083H, 'e', 083H, 'X', 083H, 'g No.%d: %s => %s (%s)', 0aH
	DB	00H
_DATA	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
_TEXT	SEGMENT
_compiler$ = -24					; size = 4
_platform$ = -20					; size = 4
_ep$ = -16						; size = 4
_conf$ = -8						; size = 4
_env$ = 8						; size = 4
_DoDebug@4 PROC

; 70   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __24F5AC6E_debug@c
	call	@__CheckForDebuggerJustMyCode@4

; 71   : #ifdef _DEBUG
; 72   :     PMC_CONFIGURATION_INFO conf;
; 73   :     conf.MEMORY_VERIFICATION_ENABLED = FALSE;

	mov	eax, DWORD PTR _conf$[ebp]
	and	eax, -2					; fffffffeH
	mov	DWORD PTR _conf$[ebp], eax

; 74   :     PMC_ENTRY_POINTS* ep = PMC_Initialize(&conf);

	lea	ecx, DWORD PTR _conf$[ebp]
	push	ecx
	call	_PMC_Initialize@4
	mov	DWORD PTR _ep$[ebp], eax

; 75   :     if (ep == NULL)

	cmp	DWORD PTR _ep$[ebp], 0
	jne	SHORT $LN2@DoDebug

; 76   :     {
; 77   :          env->log("PMC_Initialize failed");

	mov	esi, esp
	push	OFFSET $SG95478
	mov	edx, DWORD PTR _env$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 78   :          return;

	jmp	$LN1@DoDebug
$LN2@DoDebug:

; 79   :     }
; 80   : #ifdef _M_IX86
; 81   :     char* platform = "x86";

	mov	DWORD PTR _platform$[ebp], OFFSET $SG95479

; 82   : #elif defined(_M_IX64)
; 83   :     char* platform = "x64";
; 84   : #else
; 85   : #error unknown platform
; 86   : #endif
; 87   : #ifdef _MSC_VER
; 88   :     char* compiler = "MSC";

	mov	DWORD PTR _compiler$[ebp], OFFSET $SG95480

; 89   : #elif defined(__GNUC__)
; 90   :     char* compiler = "GNUC";
; 91   : #else
; 92   : #error unknown platform
; 93   : #endif
; 94   : 
; 95   :     env->log("PLATFORM: %s\n", platform);

	mov	esi, esp
	mov	ecx, DWORD PTR _platform$[ebp]
	push	ecx
	push	OFFSET $SG95481
	mov	edx, DWORD PTR _env$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 96   :     env->log("COMPILER: %s\n", compiler);

	mov	esi, esp
	mov	ecx, DWORD PTR _compiler$[ebp]
	push	ecx
	push	OFFSET $SG95482
	mov	edx, DWORD PTR _env$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 97   :     env->log("CPU-INFO: POPCNT=%d, ADX=%d, BMI1=%d, BMI2=%d, ABM=%d\n",

	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 4
	and	edx, 1
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 3
	and	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _ep$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 2
	and	eax, 1
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 1
	and	edx, 1
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	push	ecx
	push	OFFSET $SG95483
	mov	edx, DWORD PTR _env$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 98   :              ep->PROCESSOR_FEATURE_POPCNT,
; 99   :              ep->PROCESSOR_FEATURE_ADX,
; 100  :              ep->PROCESSOR_FEATURE_BMI1,
; 101  :              ep->PROCESSOR_FEATURE_BMI2,
; 102  :              ep->PROCESSOR_FEATURE_ABM);
; 103  : 
; 104  :     //CalculateCriticalDataOfDivision(env);
; 105  :     DoTest(env, ep);

	mov	ecx, DWORD PTR _ep$[ebp]
	push	ecx
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_DoTest
	add	esp, 8
$LN1@DoDebug:

; 106  : #endif
; 107  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@DoDebug
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@DoDebug:
	DD	1
	DD	$LN5@DoDebug
$LN5@DoDebug:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@DoDebug
$LN4@DoDebug:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	0
_DoDebug@4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
_TEXT	SEGMENT
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_DoTest	PROC

; 62   : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __24F5AC6E_debug@c
	call	@__CheckForDebuggerJustMyCode@4

; 63   :     TEST_Start(env);

	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Start
	add	esp, 4

; 64   :     TEST_autogenerated(env, ep);

	mov	ecx, DWORD PTR _ep$[ebp]
	push	ecx
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_autogenerated
	add	esp, 8

; 65   :     TEST_End(env);

	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_End
	add	esp, 4

; 66   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_DoTest	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
_TEXT	SEGMENT
_env$ = 8						; size = 4
_TEST_End PROC

; 52   : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __24F5AC6E_debug@c
	call	@__CheckForDebuggerJustMyCode@4

; 53   :     env->log("テスト完了。項目数=%d, OK項目数=%d, NG項目数=%d, OK率=%d%%, NG率=%d%%\n",

	mov	eax, DWORD PTR _test_total_count
	sub	eax, DWORD PTR _test_ok_count
	imul	eax, eax, 100
	cdq
	idiv	DWORD PTR _test_total_count
	mov	esi, esp
	push	eax
	imul	eax, DWORD PTR _test_ok_count, 100
	cdq
	idiv	DWORD PTR _test_total_count
	push	eax
	mov	ecx, DWORD PTR _test_total_count
	sub	ecx, DWORD PTR _test_ok_count
	push	ecx
	mov	edx, DWORD PTR _test_ok_count
	push	edx
	mov	eax, DWORD PTR _test_total_count
	push	eax
	push	OFFSET $SG95461
	mov	ecx, DWORD PTR _env$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 54   :              test_total_count,
; 55   :              test_ok_count,
; 56   :              test_total_count - test_ok_count,
; 57   :              test_ok_count * 100 / test_total_count,
; 58   :              (test_total_count - test_ok_count) * 100 / test_total_count);
; 59   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_TEST_End ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
_TEXT	SEGMENT
_env$ = 8						; size = 4
_TEST_Start PROC

; 45   : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __24F5AC6E_debug@c
	call	@__CheckForDebuggerJustMyCode@4

; 46   :     test_total_count = 0;

	mov	DWORD PTR _test_total_count, 0

; 47   :     test_ok_count = 0;

	mov	DWORD PTR _test_ok_count, 0

; 48   :     env->log("テスト開始\n");

	mov	esi, esp
	push	OFFSET $SG95456
	mov	eax, DWORD PTR _env$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 49   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_TEST_Start ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
_TEXT	SEGMENT
_format$ = 8						; size = 4
_return_value$ = 12					; size = 4
_FormatTestMesssage PROC

; 132  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __24F5AC6E_debug@c
	call	@__CheckForDebuggerJustMyCode@4

; 133  :     static char buffer[256];
; 134  :     wsprintf(buffer, format, return_value);

	mov	esi, esp
	mov	eax, DWORD PTR _return_value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	push	OFFSET ?buffer@?1??FormatTestMesssage@@9@9
	call	DWORD PTR __imp__wsprintfA
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 135  :     return buffer;

	mov	eax, OFFSET ?buffer@?1??FormatTestMesssage@@9@9

; 136  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_FormatTestMesssage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
_TEXT	SEGMENT
_format$ = 8						; size = 4
_n1$ = 12						; size = 4
_n2$ = 16						; size = 4
_FormatTestLabel PROC

; 125  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __24F5AC6E_debug@c
	call	@__CheckForDebuggerJustMyCode@4

; 126  :     static char buffer[256];
; 127  :     wsprintf(buffer, format, n1, n2);

	mov	esi, esp
	mov	eax, DWORD PTR _n2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	push	OFFSET ?buffer@?1??FormatTestLabel@@9@9
	call	DWORD PTR __imp__wsprintfA
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 128  :     return buffer;

	mov	eax, OFFSET ?buffer@?1??FormatTestLabel@@9@9

; 129  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_FormatTestLabel ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
_TEXT	SEGMENT
_env$ = 8						; size = 4
_test_name$ = 12					; size = 4
_condition$ = 16					; size = 4
_reason$ = 20						; size = 4
_TEST_Assert PROC

; 111  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __24F5AC6E_debug@c
	call	@__CheckForDebuggerJustMyCode@4

; 112  :     if (condition)

	cmp	DWORD PTR _condition$[ebp], 0
	je	SHORT $LN2@TEST_Asser

; 113  :     {
; 114  :         //env->log("テスト No.%d: %s => %s\n", test_total_count + 1, test_name, "Ok");
; 115  :         ++test_ok_count;

	mov	eax, DWORD PTR _test_ok_count
	add	eax, 1
	mov	DWORD PTR _test_ok_count, eax

; 116  :     }

	jmp	SHORT $LN3@TEST_Asser
$LN2@TEST_Asser:

; 117  :     else
; 118  :     {
; 119  :         env->log("テスト No.%d: %s => %s (%s)\n", test_total_count + 1, test_name, "***NG***", reason);

	mov	esi, esp
	mov	ecx, DWORD PTR _reason$[ebp]
	push	ecx
	push	OFFSET $SG95495
	mov	edx, DWORD PTR _test_name$[ebp]
	push	edx
	mov	eax, DWORD PTR _test_total_count
	add	eax, 1
	push	eax
	push	OFFSET $SG95496
	mov	ecx, DWORD PTR _env$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Asser:

; 120  :     }
; 121  :     ++test_total_count;

	mov	eax, DWORD PTR _test_total_count
	add	eax, 1
	mov	DWORD PTR _test_total_count, eax

; 122  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_TEST_Assert ENDP
_TEXT	ENDS
END
