; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Implements\Palmtree.Math.Core.Implements\debug.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_test_total_count
PUBLIC	_test_ok_count
_BSS	SEGMENT
_test_total_count DD 01H DUP (?)
_test_ok_count DD 01H DUP (?)
_BSS	ENDS
PUBLIC	_TEST_Assert
PUBLIC	_FormatTestLabel
PUBLIC	_FormatTestMesssage
PUBLIC	_DoDebug@4
PUBLIC	??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@	; `string'
PUBLIC	??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@ ; `string'
EXTRN	__imp__wsprintfA:PROC
_BSS	SEGMENT
?buffer@?1??FormatTestLabel@@9@9 DB 0100H DUP (?)	; `FormatTestLabel'::`2'::buffer
?buffer@?1??FormatTestMesssage@@9@9 DB 0100H DUP (?)	; `FormatTestMesssage'::`2'::buffer
_BSS	ENDS
;	COMDAT ??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@
CONST	SEGMENT
??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@ DB 083H
	DB	'e', 083H, 'X', 083H, 'g No.%d: %s => %s (%s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@
CONST	SEGMENT
??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@ DB '***NG***', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT _DoDebug@4
_TEXT	SEGMENT
_env$ = 8						; size = 4
_DoDebug@4 PROC						; COMDAT

; 68   : #ifdef _DEBUG
; 69   :     PMC_CONFIGURATION_INFO conf;
; 70   :     conf.MEMORY_VERIFICATION_ENABLED = FALSE;
; 71   :     PMC_ENTRY_POINTS* ep = PMC_Initialize(&conf);
; 72   :     if (ep == NULL)
; 73   :     {
; 74   :          env->log("PMC_Initialize failed");
; 75   :          return;
; 76   :     }
; 77   : #ifdef _M_IX86
; 78   :     char* platform = "x86";
; 79   : #elif defined(_M_IX64)
; 80   :     char* platform = "x64";
; 81   : #else
; 82   : #error unknown platform
; 83   : #endif
; 84   : #ifdef _MSC_VER
; 85   :     char* compiler = "MSC";
; 86   : #elif defined(__GNUC__)
; 87   :     char* compiler = "GNUC";
; 88   : #else
; 89   : #error unknown platform
; 90   : #endif
; 91   : 
; 92   :     env->log("PLATFORM: %s\n", platform);
; 93   :     env->log("COMPILER: %s\n", compiler);
; 94   :     env->log("CPU-INFO: POPCNT=%d, ADX=%d, BMI1=%d, BMI2=%d, ABM=%d\n",
; 95   :              ep->PROCESSOR_FEATURE_POPCNT,
; 96   :              ep->PROCESSOR_FEATURE_ADX,
; 97   :              ep->PROCESSOR_FEATURE_BMI1,
; 98   :              ep->PROCESSOR_FEATURE_BMI2,
; 99   :              ep->PROCESSOR_FEATURE_ABM);
; 100  : 
; 101  :     //CalculateCriticalDataOfDivision(env);
; 102  :     DoTest(env, ep);
; 103  : #endif
; 104  : }

	ret	4
_DoDebug@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT _FormatTestMesssage
_TEXT	SEGMENT
_format$ = 8						; size = 4
_return_value$ = 12					; size = 4
_FormatTestMesssage PROC				; COMDAT

; 129  : {

	push	ebp
	mov	ebp, esp

; 130  :     static char buffer[256];
; 131  :     wsprintf(buffer, format, return_value);

	push	DWORD PTR _return_value$[ebp]
	push	DWORD PTR _format$[ebp]
	push	OFFSET ?buffer@?1??FormatTestMesssage@@9@9
	call	DWORD PTR __imp__wsprintfA
	add	esp, 12					; 0000000cH

; 132  :     return buffer;

	mov	eax, OFFSET ?buffer@?1??FormatTestMesssage@@9@9

; 133  : }

	pop	ebp
	ret	0
_FormatTestMesssage ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT _FormatTestLabel
_TEXT	SEGMENT
_format$ = 8						; size = 4
_n1$ = 12						; size = 4
_n2$ = 16						; size = 4
_FormatTestLabel PROC					; COMDAT

; 122  : {

	push	ebp
	mov	ebp, esp

; 123  :     static char buffer[256];
; 124  :     wsprintf(buffer, format, n1, n2);

	push	DWORD PTR _n2$[ebp]
	push	DWORD PTR _n1$[ebp]
	push	DWORD PTR _format$[ebp]
	push	OFFSET ?buffer@?1??FormatTestLabel@@9@9
	call	DWORD PTR __imp__wsprintfA
	add	esp, 16					; 00000010H

; 125  :     return buffer;

	mov	eax, OFFSET ?buffer@?1??FormatTestLabel@@9@9

; 126  : }

	pop	ebp
	ret	0
_FormatTestLabel ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.implements\palmtree.math.core.implements\debug.c
;	COMDAT _TEST_Assert
_TEXT	SEGMENT
_env$ = 8						; size = 4
_test_name$ = 12					; size = 4
_condition$ = 16					; size = 4
_reason$ = 20						; size = 4
_TEST_Assert PROC					; COMDAT

; 108  : {

	push	ebp
	mov	ebp, esp

; 109  :     if (condition)

	cmp	DWORD PTR _condition$[ebp], 0
	je	SHORT $LN2@TEST_Asser

; 110  :     {
; 111  :         //env->log("テスト No.%d: %s => %s\n", test_total_count + 1, test_name, "Ok");
; 112  :         ++test_ok_count;

	inc	DWORD PTR _test_ok_count

; 117  :     }
; 118  :     ++test_total_count;
; 119  : }

	inc	DWORD PTR _test_total_count
	pop	ebp
	ret	0
$LN2@TEST_Asser:

; 113  :     }
; 114  :     else
; 115  :     {
; 116  :         env->log("テスト No.%d: %s => %s (%s)\n", test_total_count + 1, test_name, "***NG***", reason);

	push	DWORD PTR _reason$[ebp]
	mov	eax, DWORD PTR _test_total_count
	push	OFFSET ??_C@_08EHONFECB@?$CK?$CK?$CKNG?$CK?$CK?$CK@
	push	DWORD PTR _test_name$[ebp]
	inc	eax
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	OFFSET ??_C@_0BN@BCMOIBIP@?$IDe?$IDX?$IDg?5No?4?$CFd?3?5?$CFs?5?$DN?$DO?5?$CFs?5?$CI?$CFs?$CJ?6@
	mov	eax, DWORD PTR [eax]
	call	eax
	add	esp, 20					; 00000014H

; 117  :     }
; 118  :     ++test_total_count;
; 119  : }

	inc	DWORD PTR _test_total_count
	pop	ebp
	ret	0
_TEST_Assert ENDP
_TEXT	ENDS
END
